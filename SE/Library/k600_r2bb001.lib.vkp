;K600 SW-R2BB001
;Библиотека функций
;v221207
;
;(c) Hussein , IronMaster
;(p) vetaxa-manchyk

+2146FC00
0440: FFFFFFFF 0D3C3620 ; 110: void *memalloc(int size,int f1,int f2,const char *fname,int fline)
0444: FFFFFFFF 254D3620 ; 111: void memfree(void * mem,const char * fname ,int fline)
0448: FFFFFFFF 6967D620 ; 112: void memset(void *mem,char chr,int size)
044C: FFFFFFFF 00500A20 ; 113: int memcpy(void *dest,const void *source,int cnt)
0450: FFFFFFFF A172D620 ; 114: int sprintf(char *buf, char *str, ...)
0454: FFFFFFFF 9179D620 ; 115: int snwprintf(u16* buffer, int size, const u16* fmt, ...)
0458: FFFFFFFF F5BD4D20 ; 116: int _fopen(const unsigned short *filpath, const unsigned short *filname,unsigned int mode , unsigned int rights, unsigned int __0)
045C: FFFFFFFF D5CF4D20 ; 117: int fclose(int file)
0460: FFFFFFFF F1D24D20 ; 118: int fread(int file , void *ptr, int size)
0464: FFFFFFFF 8DD54D20 ; 119: int fwrite(int file , const void *ptr, int size)
;0468: FFFFFFFF D5D18E20 ; 11A: int _wstat(short *path, void *statbuf)
;046C: FFFFFFFF 1D5C7120 ; 11B: int fputs(const char *s, int file)
0470: FFFFFFFF B5C64D20 ; 11C: int isFileExist(u16 * pach, u16 *fname , FSTAT * fstat_stuct)
0474: FFFFFFFF 75A34D20 ; 11D: void * AllocDirHandle(u16 * path)
0478: FFFFFFFF 19A54D20 ; 11E: void *GetFname(void *, void*)
047C: FFFFFFFF 01F81F20 ; 11F: void * CreateDataBrowser(void)

0480: FFFFFFFF 19F61F20 ; 120: void DataBrowser_SetStyle(void * db , int style)
0484: FFFFFFFF A9F61F20 ; 121: void DataBrowser_SetHeaderText(void * db , int StrID)
0488: FFFFFFFF 61F61F20 ; 122: void DataBrowser_SetFolders(void * db , int * FolderList)
048C: FFFFFFFF CDF61F20 ; 123: void DataBrowser_SetOKSoftKeyText(void * db , int StrID)
0490: FFFFFFFF 69E81F20 ; 124: void DataBrowser_Show(void * db)
0494: FFFFFFFF 89F81F20 ; 125: void DataBrowser_XXX(void * db)
0498: FFFFFFFF 6DE64D20 ; 126: unsigned short * getFileExtention(unsigned short * fnane)
049C: FFFFFFFF ADA74D20 ; 127: int DataBrowser_isFileInListExt(unsigned short * ext_table,unsigned short * patch ,unsigned short * fname )
04A0: FFFFFFFF D9C12520 ; 128: void Timer_ReSet(u16 *timerID ,int time, void (*onTimer)(u16 * unk , void *), void*)
04A4: FFFFFFFF A1C12520 ; 129: u16 Timer_Set(int time, void (*onTimer)(u16 * unk , void *), void*)
04A8: FFFFFFFF 29C22520 ; 12A: void Timer_Kill(u16 *timerID)
04AC: FFFFFFFF 39CF2520 ; 12B: int CreateBook(void * mem, void (* onClose)(BOOK*), const PAGE_DESC * bp, const char * name, int __0xFFFFFFFF,int __0)
04B0: FFFFFFFF 51D02520 ; 12C: void BookObj_KillBook(void *Book)
04B4: FFFFFFFF 91CC2520 ; 12D: void BookObj_GotoPage(BOOK * book, const PAGE_DESC * page)
04B8: FFFFFFFF 19CE2520 ; 12E: void BookObj_ReturnPage(BOOK * ,int)
04BC: FFFFFFFF 51D52520 ; 12F: void FreeBook ( void *book)

04C0: FFFFFFFF 9D5C4220 ; 130: BOOK * FindBook(IS_NEEDED_BOOK)
04C4: FFFFFFFF FD212820 ; 131: BOOK * Find_StandbyBook(void)
04C8: FFFFFFFF C9D12520 ; 132: void BookObj_SetFocus(void *,int focus)
04CC: FFFFFFFF 111F7520 ; 133: void GuiObject_SetTitleText (void * gui , int StrID)
04D0: FFFFFFFF 151E7520 ; 134: void ShowWindow (void * gui)
04D4: FFFFFFFF 41CB7720 ; 135: void SetCursorToItem ( void *obj , int item)
04D8: FFFFFFFF 651E7520 ; 136: void GUI_SetStyle(GUI_NOFMANY *,int style)
04DC: FFFFFFFF 65D57720 ; 137: int GUIonMessage_GetCreatedItemIndex ( void *msg)
04E0: FFFFFFFF 75D57720 ; 138: char SetMenuItemText0 ( GUI_MESSAGE *, int StrID)
04E4: FFFFFFFF A5D57720 ; 139: char SetMenuItemText1 ( GUI_MESSAGE *, int StrID)
04E8: FFFFFFFF 85D57720 ; 13A: char SetMenuItemText2 ( GUI_MESSAGE *, int StrID)
04EC: FFFFFFFF 95D57720 ; 13B: char SetMenuItemText3 ( GUI_MESSAGE *, int StrID)
04F0: FFFFFFFF B5D57720 ; 13C: void SetListObjectItemIcon ( void *msg , int align , int iconID)
04F4: FFFFFFFF BD642620 ; 13D: void SetHeaderText( void *obj , int StrID)
04F8: FFFFFFFF 55CB7720 ; 13E: int GetFocusetListObjectItem( void *obj)
04FC: FFFFFFFF A1CB7720 ; 13F: void SetMenuItemStyle( void *obj , int style)

0500: FFFFFFFF 55BF7520 ; 140: void putchar( void *xx , int x, int y, int _zero, int zero1 , short wchar)
0504: FFFFFFFF 1D1A7620 ; 141: __thumb IS_NEEDED_BOOK isScreenSaverBook(void);
0508: FFFFFFFF 99667520 ; 142: void StatusIndication_SetItemText(void *gui,int item,int StrID)
050C: FFFFFFFF 993F2820 ; 143: void StatusIndication_ShowNotes(int StrID)
0510: FFFFFFFF 49107720 ; 144: void * CreateStringInput(int,...)
0514: FFFFFFFF 09E77720 ; 145: GUI_ONEOFMANY * CreateOneOfMany(BOOK *)
0518: FFFFFFFF 3D7B7520 ; 146: void OneOfMany_SetItemCount(GUI_ONEOFMANY * , int count)
051C: FFFFFFFF 65E87720 ; 147: void OneOfMany_SetChecked(GUI_ONEOFMANY * , int checked)
0520: FFFFFFFF 8DE87720 ; 148: void OneOfMany_SetTexts(GUI_ONEOFMANY * , int * StrID , int Count)
0524: FFFFFFFF ED7B7520 ; 149: int OneOfMany_GetSelected(GUI_ONEOFMANY * rb)
0528: FFFFFFFF B53E2820 ; 14A: void StatusIndication_Item8_SetText(int StrID)
052C: FFFFFFFF 05377520 ; 14B: void AddMSGHook(void * menu,short msg,void (*proc)(BOOK *,void*))
0530: FFFFFFFF ED377520 ; 14C: void AddCommand(void * menu,int cmd , int StrID)
0534: FFFFFFFF 5D397520 ; 14D: void SoftKey_SetEnable(void *gui,int msg,int ena)
0538: FFFFFFFF C9387520 ; 14E: void SoftKey_AddErrorStr(void *gui,int msg,int StrID)
053C: FFFFFFFF 95367520 ; 14F: void SoftKey_RemoveItem(void *gui,u16 action)

0540: FFFFFFFF 85387520 ; 150: void SoftKey_SetVisible(void *gui,int action,int visible)
0544: FFFFFFFF 493D7520 ; 151: void SoftKey_SuppressDefaultAction(void *gui,int action)
0548: FFFFFFFF 61F16020 ; 152: u16* wstrcpy(u16 * dest, u16 * source)
054C: FFFFFFFF A9F16020 ; 153: u16* wstrncpy(u16 * dest, u16 * source, int maxlen)
0550: FFFFFFFF 09F26020 ; 154: u16* wstrcat(u16 * wstr, u16 * subwstr)
0554: FFFFFFFF 55F26020 ; 155: short* wstrncat(short * wstr, short * subwstr , int maxlen)
0558: FFFFFFFF 11F16020 ; 156: int wstrcmp(unsigned short * wstr1, unsigned short * wstr2)
055C: FFFFFFFF E5F06020 ; 157: int wstrlen(u16 * wstr)
0560: FFFFFFFF B5056120 ; 158: u16 * str2wstr(u16 * wstr,char * str)
0564: FFFFFFFF 1177D620 ; 159: int strcmp(char * str1, char * str2)
0568: FFFFFFFF 7977D620 ; 15A: int strlen(char *str)
056C: FFFFFFFF 49F36020 ; 15B: char * wstr2strn (char * str , u16 * wstr, int maxlen)
0570: FFFFFFFF 69FB2C20 ; 15C: int int2strID (int num)
0574: FFFFFFFF 39FF2C20 ; 15D: int Str2ID(const void * wstr , int flag , int len)
0578: FFFFFFFF 090C2D20 ; 15E: void StrID2Str(int StrID,char * str,int maxlen)
057C: FFFFFFFF C5032D20 ; 15F: void TextID2wstr(int StrID,u16 * str,int maxlen)

0580: FFFFFFFF A5022D20 ; 160: int TextGetLength(int StrID)
0584: FFFFFFFF 11022D20 ; 161: void TextFree(int StrID)
0588: FFFFFFFF CDF01C20 ; 162: int AB_DEFAULTNBR_GET(int rec_num, void * mem_0x30, int * unk)
058C: FFFFFFFF 1D141D20 ; 163: int AB_READSTRING(void * mem_0x30,int rec_num, int rec_item_num)
0590: FFFFFFFF 011B1D20 ; 164: int AB_READPHONENBR(void * mem_0x30,int rec_num, int rec_item_num)
0594: FFFFFFFF 4D1C1D20 ; 165: int AB_GETNBROFITEMS(int get_from,int unk_0)
0598: FFFFFFFF DDF72C20 ; 166: int PNUM_len(void *pnum)
059C: FFFFFFFF 8D6C3120 ; 167: void PNUM2str(char *str,void *pnum,int len, int max_len)
;05A0: FFFFFFFF 99212320 ; 168: void * ListElement_GetByNum(LIST *lst,int num_element)
05A0: FFFFFFFF C50E2820 ; 168:  DISP_OBJ * GUIObj_GetDISPObj (void * gui);
05A4: FFFFFFFF F11D2320 ; 169: LIST *List_New(void)
05A8: FFFFFFFF 151E2320 ; 16A: void List_Free(LIST *lst)
05AC: FFFFFFFF 351F2320 ; 16B: void ListElement_AddtoTop(LIST *lst,void *newElement)
05B0: FFFFFFFF 556E3320 ; 16C: int Gif2ID(u16 IMAGEHANDLE,u16 * path, u16 * fname,u16 * ID)
05B4: FFFFFFFF DD524D20 ; 16D: int REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE(const int * __zero,u16 * IMAGEHANDLE,u16 * unk)
05B8: FFFFFFFF DDD54B20 ; 16E: void REQUEST_DATEANDTIME_GET(const int * __zero , DATETIME * dt)
05BC: FFFFFFFF F9934220 ; 16F: void IndicationDevice_Backlight_FadeToLevel(int unk_zero ,int bl_level)

05C0: FFFFFFFF 09613620 ; 170: int GetFreeBytesOnHeap(void)
05C4: FFFFFFFF F9D12520 ; 171: void Hide(void * udata, int zero)
05C8: FFFFFFFF 0DD22520 ; 172: void Show(void * udata, int zero)
05CC: FFFFFFFF 99252820 ; 173: void StartAPP (u16 * appname)
;05D0: FFFFFFFF EDC72520 ; 174: void CreateEvent(int event)
05D0: FFFFFFFF A1CC7720 ; 174: void ListMenu_SetOnMessages (GUI_LIST * , void * onMessage);
05D4: FFFFFFFF FD8A4520 ; 175: char * manifest_GetParam(char *buf,char *param_name,int unk)
05D8: FFFFFFFF 19D74D20 ; 176: int lseek(int file,int offset,int mode)
;05DC: FFFFFFFF 4CBC3E28 ;3474094C   ; 177:  int get_VBUFFER(void)            // не нашел скорее всего даже и нету такого в моем теле
05E0: FFFFFFFF 1D0B2920 ; 178: viod SetLampLevel (int level)
05E4: FFFFFFFF BD1E2320 ; 179: void * ListElement_Remove(LIST *lst,int index)
05E8: FFFFFFFF 69D10620 ; 17A: int GetCurrentPID(void)
05EC: FFFFFFFF F51E2320 ; 17B: int ListElement_Prt2NumElement(LIST *lst,void *ptr)
05F0: FFFFFFFF 483F0A20 ; 17C: void *alloc(int size,int signo)
05F4: FFFFFFFF 643F0A20 ; 17D: void * recive(const SIGSELECT *sigsel);
05F8: FFFFFFFF 543F0A20 ; 17E: void send(union SIGNAL **sig,int PID);
05FC: FFFFFFFF A43F0A20 ; 17F: int sender(void **sig);

0600: FFFFFFFF 743F0A20 ; 180: void free_buf(void **sig);
0604: FFFFFFFF 40400A20 ; 181: int create_process(int proc_type,char *name,void (*entrypoint)(void),int stack_size,int priority,int timeslice,int pid_block,void *redir_table,int vector,int user);
0608: FFFFFFFF 60420A20 ; 182: void start (int pid)
060C: FFFFFFFF 10410A20 ; 183: int get_ptype(int pid);
0610: FFFFFFFF 5C400A20 ; 184: int current_process (void);
0614: FFFFFFFF 943F0A20 ; 185: int delay (int timeout)


0680: FFFFFFFF 4177D620 ; 1A0: char* strcpy(char * dest, char * source);
0684: FFFFFFFF 3DE86B20 ; 1A1: void *CreateMessage(int size,int ev,char *name);
0688: FFFFFFFF 91E86B20 ; 1A2: void SendMessage(void **signal,int PID);
068C: FFFFFFFF 4DE96B20 ; 1A3: void * WaitMessage(void *SIGSEL);
0690: FFFFFFFF 6DE96B20 ; 1A4: int FreeMessage(void **Mess);
0694: FFFFFFFF 15AF2120 ; 1A5: void SendDispatchMessage(int id, int unk_zero, int size,void *mess);
0698: FFFFFFFF 192A5420 ; 1A6:  char * UIEventName (int event);
069C: FFFFFFFF 64432428 ;81A7: __thumb int * MissedEvents void);//возможно не правильно(
06A0: FFFFFFFF B95D4220 ; 1A8: void UI_Event(int event);
06A4: FFFFFFFF C55D4220 ; 1A9: void UI_Event_wData(int event,void *message,void (*mfree)(void*));
06A8: FFFFFFFF E95D4220 ; 1AA: void UI_Event_toSID(int event,int SessionID);
06AC: FFFFFFFF F95D4220 ; 1AB: void UI_Event_toSIDwData(void *event,int SedionID,void *message,void (*mfree)(void*));
06B0: FFFFFFFF F9212320 ; 1AC: int ListElement_Find(LIST *lst,void *element, int (*cmp_proc)(void *,void *));
06B4: FFFFFFFF C5202320 ; 1AD: void * ListElement_GetByIndex(LIST * , int index);
06B8: FFFFFFFF CD066120 ; 1AE: u16* wstrrchr(u16*wstr, u16 wchar);
06BC: FFFFFFFF 11CD2520 ; 1AF: void BookObj_CallSubroutine(BOOK * , void * SubProcDesc);

06C0: FFFFFFFF 451F2320 ; 1B0: void ListElement_Add(LIST *lst,void *newElement);
06C4: FFFFFFFF 858ED220 ; 1B1: void debug_printf(char * fmt,...)
06C8: FFFFFFFF 4D637520 ; 1B2: int PlayFile(u16 * path, u16 * fname);
;06CC: FFFFFFFF C1317620 ; 1B3: int GetChargeBatteryInPercent(BOOK *standby , char * ChargeLevel);
06D0: FFFFFFFF 7D525520 ; 1B4: int REQUEST_PROFILE_GETACTIVEPROFILE(const int *__zero , int *level);
06D4: FFFFFFFF D9525520 ; 1B5: void REQUEST_PROFILE_SETACTIVEPROFILE(const int *__zero , int NUMprof);
06D8: FFFFFFFF 7DDD2820 ; 1B6: void SetBrightnessOfScreen(int br);
06DC: FFFFFFFF 11087620 ; 1B7: int isKeylocked(void);
06E0: FFFFFFFF D53B3520 ; 81B8: IS_NEEDED_BOOK isMediaPlayerVideoBook(void);
06E4: FFFFFFFF 29553520 ; 1B9: void VideoOnWholeScreen(BOOK * MediaPlayer_Video_Book);
06E8: FFFFFFFF 7D147620 ; 1BA: void ShuttingDown(void);
06EC: FFFFFFFF 8D834620 ; 1BB: void Vibra(int t1, int t2, int t3);
06F0: FFFFFFFF 3DD84B20 ; 1BC: char REQUEST_DATEFORMAT_GET(const int *SYNC, char *DateFormat);
06F4: FFFFFFFF DDD84B20 ; 1BD: char REQUEST_TIMEFORMAT_GET(const int *SYNC, char *TimeFormat);
06F8: FFFFFFFF 19B97420 ; 1BE: int Date2ID(DATE *, char DateFormat);
06FC: FFFFFFFF 31B87420 ; 1BF: int Time2ID(TIME *, char TimeFormat,int);

0700: FFFFFFFF B5C97720   ; 1C0: GUI_LIST * CreateListObject(BOOK * , void * unk);
0704: FFFFFFFF 71CB7720   ; 1C1: void SetNumOfMenuItem(void * , int item_count);
0708: FFFFFFFF 8C911128   ;81C2: LIST ** ROOT_APP(void);
070C: FFFFFFFF B1377520   ; 1C3: void SoftKey_AddHelpStr(void *gui,int msg,int StrID);
0710: FFFFFFFF A9397520   ; 1C4: void SoftKey_SetItemAsSubItem(void *gui,int item,int subitem);
0714: FFFFFFFF 41945420   ; 1C5: int REQUEST_SYSTEM_SHUTDOWN(void);
0718: FFFFFFFF 51945420   ; 1C6: int REQUEST_SYSTEM_RESTART(void);
071C: FFFFFFFF 35387520   ; 1C7: void SoftKeys_SetText(void *gui,int msg,int StrID,int StrID1);
0720: FFFFFFFF E93C5420   ; 1C8: int isRightNowBook(BOOK *);
0724: FFFFFFFF 51915420   ; 1C9: int isVolumeControllerBook(BOOK *);
0728: FFFFFFFF 21407520   ; 1CA: GUI_TABMENUBAR * CreateTabMenuBar(BOOK *);
072C: FFFFFFFF 41417520   ; 1CB: void TabMenuBar_SetTabCount(GUI_TABMENUBAR * , int count);
0730: FFFFFFFF 2D427520   ; 1CC: void TabMenuBar_AssignGuiObj(GUI_TABMENUBAR * , int tab , GUI*);
0734: FFFFFFFF 9D427520   ; 1CD: void TabMenuBar_SetTabIcon(GUI_TABMENUBAR *,int tab, u16 icon , int for_state);
0738: FFFFFFFF 7D0C2820   ; 1CE: void GUI_Free(GUI*);
073C: FFFFFFFF FD217520   ; 1CF: void GUI_SetIcon(GUI* , int icon);

0740: FFFFFFFF 091D7720   ; 1D0: int StringInput_GetStringAndLen (GUI*,u16**,u16*);
;0744: FFFFFFFF    ; 1D1:
;0748: FFFFFFFF    ; 1D2:
074C: FFFFFFFF 29E64D20   ; 1D3: int GetVolumeSize(char * volume, VOLUMESIZE *);
0750: FFFFFFFF F1E37720   ; 1D4: GUI_NOFMANY * CreateNOfMany(BOOK *);
0754: FFFFFFFF C1E57720   ; 1D5: void NOfMany_SetTexts(GUI_NOFMANY * , int * StrIDtable, int items_count);
0758: FFFFFFFF 25E57720   ; 1D6: void NOfMany_SetChecked(GUI_NOFMANY * , u16 * checked_table, int items_count);
075C: FFFFFFFF E5E47720   ; 1D7: void NOfMany_SetCursor(GUI_NOFMANY * , int item);
0760: FFFFFFFF 4DE57720   ; 1D8: int NOfMany_GetCheckedCount(GUI_NOFMANY *);
0764: FFFFFFFF 39E57720   ; 1D9: int NOfMany_GetChecked(GUI_NOFMANY * , u16 * buffer );
0768: FFFFFFFF B9E57720   ; 1DA: void NOfMany_SetonMessage(GUI_NOFMANY * , void * proc );
;076C: FFFFFFFF    ; 1DB:
;0770: FFFFFFFF    ; 1DC:
;0774: FFFFFFFF    ; 1DD:
;0778: FFFFFFFF    ; 1DE:
;077C: FFFFFFFF    ; 1DF:

0780: FFFFFFFF 25E87720   ; 1E0: void OneOfMany_SetFocused(GUI_ONEOFMANY * , int item);
0784: FFFFFFFF 85E87720   ; 1E1: void OneOfMany_SetonMessage(GUI_ONEOFMANY * , void * proc);
0788: FFFFFFFF E1487520   ; 1E2: GUI_FEEDBACK * CreateFeedBack (int,...);
078C: FFFFFFFF 8D497520   ; 1E3: void  FeedBack_SetText(GUI_FEEDBACK*,int);
0790: FFFFFFFF ED178120   ; 1E4: int GetBattaryState(const int * , BATT *);
0794: FFFFFFFF 75B47520   ; 1E5: void * get_DisplayGC (void);
0798: FFFFFFFF 55492620   ; 1E6: void GetGuiRect(void*,RECT*);
079C: FFFFFFFF 49BA7520   ; 1E7: void get_GC_RECT(void*,RECT*);
07A0: FFFFFFFF 5DBD7520   ; 1E8: int get_GC_xx(void * GC);
07A4: FFFFFFFF 51BD7520   ; 1E9: void *set_GC_xx(void * GC, int);
07A8: FFFFFFFF F1B97520   ; 1EA: void GC_validate_RECT(void * GC , RECT*);
07AC: FFFFFFFF D9D22520   ; 1EB: void addGui2book(BOOK*,GUI*)
07B0: FFFFFFFF BD7F2620   ; 1EC: void DrawRect(int x1, int y1,int x2 ,int y2,int pen_color,int brush_color);
07B4: FFFFFFFF C5832620   ; 1ED: void DrawString(int StrID,int align,int x1,int y1,int x2,int y2,int unk,int unk1,int pen_color ,int brush_color);
07B8: FFFFFFFF 7D102820   ; 1EE: void addGui2XGuiList (void* xguilist , GUI*);
07BC: FFFFFFFF D5472620   ; 1EF: void InvalidateRect(DISP_OBJ *,RECT*);

07C0: FFFFFFFF 050C2820   ; 1F0: int CreateObject(GUI*,void (*)(DISP_DESC *),void (*)(DISP_DESC *),BOOK *,int,int,int size_obj);
07C4: FFFFFFFF 198F2620   ; 1F1: int SetFont(int);
07C8: FFFFFFFF 90931128   ;81F2: DISP_OBJ ** StatusRow_p(void);
07CC: FFFFFFFF 915D4220   ; 1F3: int root_list_get_session_count(void);
07D0: FFFFFFFF A55D4220   ; 1F4: UI_APP_SESSION *root_list_get_session(int num_session);
07D4: FFFFFFFF BD564220   ; 1F5: BOOK *SESSION_GetTopBook(UI_APP_SESSION *);
07D8: FFFFFFFF 49517520   ; 1F6: int MainInput_getVisible(GUI *);
07DC: FFFFFFFF 55517520   ; 1F7: int MainInput_strlen(GUI *);
07E0: FFFFFFFF 69517520   ; 1F8:  char * MainInput_getPNUM(GUI *);
07E4: FFFFFFFF 75517520   ; 1F9: int MainInput_isPlus(GUI *);
07E8: FFFFFFFF A5D62520   ; 1FA: int BOOK_GetSessionID(BOOK * );
07EC: FFFFFFFF 41066120   ; 1FB: int wstrncmp(u16*,u16*,int);
07F0: FFFFFFFF 79632620   ; 1FC: int DISP_OBJ_GetAbsoluteXPos(DISP_OBJ *);
07F4: FFFFFFFF A1632620   ; 1FD: int DISP_OBJ_GetAbsoluteYPos(DISP_OBJ *);
07F8: FFFFFFFF DD4D2620   ; 1FE: WINDOW * DISP_OBJ_GetWindow(DISP_OBJ *);
07FC: FFFFFFFF A1D44220   ; 1FF: int GetThemeColor(int , int);

0800: FFFFFFFF 214A5520   ; 200: int REQUEST_SETTING_SILENCE_SET(const int * __zero,u16 profile,u16 value);
0804: FFFFFFFF C5495520   ; 201: int REQUEST_SETTING_SILENCE_GET(const int * __zero,u16 profile, char * silence_mode);
0808: FFFFFFFF 3D291C20   ; 202: void VCALL_Init (void* vc);
080C: FFFFFFFF 312A1C20   ; 203: void VCALL_SetName (void * vc , u16 * name ,char name_len);
0810: FFFFFFFF 8D2A1C20   ; 204: void VCALL_SetNameIcon (void * vc , u16 icon);
0814: FFFFFFFF 512A1C20   ; 205: void VCALL_SetNumber (void * vc , u16 * number , char num_len);
0818: FFFFFFFF 792A1C20   ; 206: void VCALL_SetHZ1 (void * vc, int , u16 );
081C: FFFFFFFF 852A1C20   ; 207: void VCALL_SetHZ2 (void * vc , u16 );
0820: FFFFFFFF 55201C20   ; 208: void MakeVoiceCall (int SessioID , void * vc ,int flag);
0824: FFFFFFFF 7D7F5320   ; 209: int isDirectory (u16 * path ,u16 * filename , int * error );
0828: FFFFFFFF 09C84D20   ; 20A: void FileDelete (u16 * path ,u16 * filename , int * error );
082C: FFFFFFFF 91207520   ; 20B: void SetFocus (GUI * , int);
0830: FFFFFFFF 254E3720   ; 20C: int CreateSMSCont (int, void*);
0834: FFFFFFFF BD523720   ; 20D: int FreeSMSCont (void*);
0838: FFFFFFFF 854F3720   ; 20E: int PrepareSMSCont (void*,u16*,u16*,int,int);
083C: FFFFFFFF 0D523720   ; 20F: int CteateNewMessage (int,void*,int);

0840: FFFFFFFF 387BF320   ; 210: void * get_APP_DESC_TABLE(void);
0844: FFFFFFFF 1D1C7520   ; 211: C_INTERFACE *Window_GetComponentInterface(WINDOW*)
0848: FFFFFFFF 69211D20   ; 212: int AB_POSITIONNBR_GET(void * ab_name,char * ,u16 * ,void * ab_num);
084C: FFFFFFFF 0D1E1D20   ; 213: int AB_NAME_ITEM2StrID(void * ab_name);
0850: FFFFFFFF 751E1D20   ; 214: int AB_NUM_ITEM2StrID(void * ab_num_item);
0854: FFFFFFFF 61F84820   ; 215: int GetABRecNum(AB_GET_STRUCT *);
0858: FFFFFFFF 58A8F020   ;8216: AB_ITEM_DESC * get_AB_ITEMS_DESC()
085C: FFFFFFFF C9DE4920   ; 217: GUI * SBY_GetMainInput(BOOK * StandBy);
0860: FFFFFFFF C5DE4920   ; 218: GUI * SBY_GetStatusIndication(BOOK * StandBy);
0864: FFFFFFFF E1004C20   ; 219: int REQUEST_PHONEBOOK_ACCESSSTATUS_TOTAL_GET(const int * __zero, int *)
0868: FFFFFFFF 0CED0728   ;821A: int * PID_MMI(void)
;086C: FFFFFFFF    ; 21B:
;0870: FFFFFFFF    ; 21C:
0874: FFFFFFFF 3D422620   ; 21D: DISP_OBJ* DISPBASE_GetFocused(int display);
0878: FFFFFFFF 89462620   ; 21E: char DISP_OBJ_getVisible(DISP_OBJ*);
087C: FFFFFFFF 259C4320   ; 21F: DISP_DESC* DISP_OBJ_GetDESC (DISP_OBJ*);

0880: FFFFFFFF 093A2620   ; 220: void DISP_DESC_SetName (DISP_DESC *  , char * name);
0884: FFFFFFFF 51612620   ; 221: char* DISP_OBJ_GetName (DISP_OBJ *);
0888: FFFFFFFF 313A2620   ; 222: void DISP_DESC_SetSize (DISP_DESC* , u16 size);
;088C: FFFFFFFF    ; 223: u16 DISP_DESC_GetSize (DISP_BASE *);
0890: FFFFFFFF 513A2620   ; 224: void DISP_DESC_SetOnCreate (DISP_DESC* , DISP_OBJ_ONCREATE_METHOD);
0894: FFFFFFFF FD3D2620   ; 225: DISP_OBJ_ONCREATE_METHOD DISP_OBJ_GetOnCreate (DISP_OBJ *);
0898: FFFFFFFF 713A2620   ; 226: void DISP_DESC_SetOnClose (DISP_DESC* , DISP_OBJ_ONCLOSE_METHOD);
089C: FFFFFFFF 113E2620   ; 227: DISP_OBJ_ONCLOSE_METHOD DISP_OBJ_GetOnClose (DISP_OBJ *);
08A0: FFFFFFFF 913A2620   ; 228: void DISP_DESC_SetOnRedraw (DISP_DESC* , DISP_OBJ_ONREDRAW_METHOD);
08A4: FFFFFFFF 253E2620   ; 229: DISP_OBJ_ONREDRAW_METHOD DISP_OBJ_GetOnRedraw (DISP_OBJ *);
08A8: FFFFFFFF D13A2620   ; 22A: void DISP_DESC_SetOnKey (DISP_DESC* , DISP_OBJ_ONKEY_METHOD);
08AC: FFFFFFFF 4D3E2620   ; 22B: DISP_OBJ_ONKEY_METHOD DISP_OBJ_GetOnKey (DISP_OBJ *);
;08B0: FFFFFFFF    ; 22C: void DISP_DESC_SetMethod03 (DISP_DESC* ,void (*)(void*));
;08B4: FFFFFFFF    ; 22D: DISP_BASE_METHOD DISP_BASE_GetMethod03 (DISP_BASE *);
;08B8: FFFFFFFF    ; 22E: void DISP_DESC_SetMethod04 (DISP_DESC* ,void (*)(void*));
;08BC: FFFFFFFF    ; 22F: DISP_BASE_METHOD DISP_BASE_GetMethod04 (DISP_BASE *);

;08C0: FFFFFFFF    ; 230: void DISP_DESC_SetMethod05 (DISP_DESC* ,void (*)(void*));
;08C4: FFFFFFFF    ; 231: DISP_BASE_METHOD DISP_BASE_GetMethod05 (DISP_BASE *);
08C8: FFFFFFFF F13A2620   ; 232: void DISP_DESC_SetMethod06 (DISP_DESC* ,DISP_OBJ_METHOD);
08CC: FFFFFFFF 613E2620   ; 233: DISP_OBJ_METHOD DISP_OBJ_GetMethod06 (DISP_OBJ *);
;08D0: FFFFFFFF    ; 234: void DISP_DESC_SetMethod07 (DISP_DESC* ,void (*)(void*));
;08D4: FFFFFFFF    ; 235: DISP_BASE_METHOD DISP_BASE_GetMethod07 (DISP_BASE *);
08D8: FFFFFFFF 313B2620   ; 236: void DISP_DESC_SetMethod08 (DISP_DESC* ,DISP_OBJ_METHOD);
08DC: FFFFFFFF 893E2620   ; 237: DISP_OBJ_METHOD DISP_OBJ_GetMethod08 (DISP_OBJ *);
;08E0: FFFFFFFF    ; 238: void DISP_DESC_SetMethod09 (DISP_DESC* ,void (*)(void*));
;08E4: FFFFFFFF    ; 239: DISP_BASE_METHOD DISP_BASE_GetMethod09 (DISP_BASE *);
;08E8: FFFFFFFF    ; 23A: void DISP_DESC_SetMethod0A (DISP_DESC* ,void (*)(void*));
;08EC: FFFFFFFF    ; 23B: DISP_BASE_METHOD DISP_BASE_GetMethod0A (DISP_BASE *);
;08F0: FFFFFFFF    ; 23C: void DISP_DESC_SetMethod0B (DISP_DESC* ,void (*)(void*));
;08F4: FFFFFFFF    ; 23D: DISP_BASE_METHOD DISP_BASE_GetMethod0B (DISP_BASE *);
;08F8: FFFFFFFF    ; 23E: void DISP_DESC_SetMethod0C (DISP_DESC* ,void (*)(void*));
;08FC: FFFFFFFF    ; 23F: DISP_BASE_METHOD DISP_BASE_GetMethod0C (DISP_BASE *);
;14.01.2008
0900: FFFFFFFF F96B5420   ; 240: void JavaSession_Manager (int cmd);
0904: FFFFFFFF 416B5420   ; 241: int JavaSession_GetName(void);
0908: FFFFFFFF A5002D20   ; 242: int TextCopyId(int);
090C: FFFFFFFF 95D52520   ; 243: UI_APP_SESSION *Book_GetSession(BOOK*);
0910: FFFFFFFF 01D67720   ; 244: void List2lineSetAsSubitem (void* msg,int unk,int n_sub_items);
0914: FFFFFFFF 8DD67720   ; 245: void List2lineSubitemAddText(void* msg,int StrID);
0918: FFFFFFFF 7DD67720   ; 246: int GUIonMessage_GetCreatedSubItemParrentIndex(void * msg);
;17.01.2008
091C: FFFFFFFF E14D7320   ; 247: go_music (int go); // не правильный прототип!!!!!!!
0920: FFFFFFFF 5D844620   ; 248: void Vibra_Off(int t1);
0924: FFFFFFFF 95553520   ; 249: void VideoOnNormalScreen(BOOK * MediaPlayer_Video_Book);

0948: FFFFFFFF 6DD67720   ; 252: int List2LineGetCurrentIndex(void * msg);
094C: FFFFFFFF 5DD67720   ; 253: int GUIonMessage_GetCurrentItemIndex(void * msg);
0950: FFFFFFFF F1A64D20   ; 254: void DestroyDirHandle(void *handle);
0954: FFFFFFFF 74E1F120   ; 8255: DB_EXT *LastExtDB(void);
0958: FFFFFFFF 4DD34E20   ; 256: void GetOtherExtMethods(FILESUBROUTINE **);
095C: FFFFFFFF A51A4320   ; 257: void MessageBox(int HeaderStrID,int MessageStrID,int IconID, int style /*1 or 2*/,int time,BOOK * unk);
