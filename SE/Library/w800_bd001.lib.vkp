;W800 SW-R1BD001
;Библиотека функций
;v221207
;
;(c) Hussein , IronMaster
;(p) HierOS

+451FFC00
0440: FFFFFFFF 5d14F844 ; 110: void *memalloc(int size,int f1,int f2,const char *fname,int fline)
0444: FFFFFFFF 7925F844 ; 111: void memfree(void * mem,const char * fname ,int fline)
0448: FFFFFFFF 8d2fB444 ; 112: void memset(void *mem,char chr,int size)
044C: FFFFFFFF 609D0644 ; 113: int memcpy(void *dest,const void *source,int cnt)
0450: FFFFFFFF b53aB444 ; 114: int sprintf(char *buf, char *str, ...)
0454: FFFFFFFF 9941B444 ; 115: int snwprintf(u16* buffer, int size, const u16* fmt, ...)

0458: FFFFFFFF 29570E45 ; 116: int _fopen(const unsigned short *filename, const char *mode)
045C: FFFFFFFF 09690E45 ; 117: int fclose(int file)
0460: FFFFFFFF 256c0E45 ; 118: int fread(int file , void *ptr, int size)
0464: FFFFFFFF c16e0E45 ; 119: int fwrite(const void *ptr, int size, int n, int file)
0468: FFFFFFFF 0dd58044 ; 11A: int _wstat(short *path, void *statbuf)
046C: FFFFFFFF 49bcCF44 ; 11B: int fputs(const char *s, int file)

0470: FFFFFFFF e95f0E45 ; 11C: int isFileExist(u16 * pach, u16 *fname , FSTAT * fstat_stuct)
0474: FFFFFFFF a13c0e45 ; 11D: void * AllocDirHandle(u16 * path)
0478: FFFFFFFF 453e0E45 ; 11E: void *GetFname(void *, void*)
047C: FFFFFFFF 7955e244 ; 11F: void * CreateDataBrowser(void)

0480: FFFFFFFF 9153E244 ; 120: void DataBrowser_SetStyle(void * db , int style)
0484: FFFFFFFF 2154E244 ; 121: void DataBrowser_SetHeaderText(void * db , int StrID)
0488: FFFFFFFF D953E244 ; 122: void DataBrowser_SetFolders(void * db , int * FolderList)
048C: FFFFFFFF 4554E244 ; 123: void DataBrowser_SetOKSoftKeyText(void * db , int StrID)
0490: FFFFFFFF e545E244 ; 124: void DataBrowser_Show(void * db)
0494: FFFFFFFF 0156E244 ; 125: void DataBrowser_XXX(void * db)
0498: FFFFFFFF d97f0E45 ; 126: unsigned short * getFileExtention(unsigned short * fnane)
049C: FFFFFFFF d9400e45 ; 127: int DataBrowser_isFileInListExt(unsigned short * ext_table,unsigned short * patch ,unsigned short * fname )
04A0: FFFFFFFF dd1dE844 ; 128: void CreateTimer(void *unk,int time,void *proc,void *book)
04A4: FFFFFFFF a51dE844 ; 129: void SetTimer(int time, int (*_PROC_)(void *,void *),void* timer)
04A8: FFFFFFFF 2d1eE844 ; 12A: void FreeTimer(void *timer)
04AC: FFFFFFFF 652aE844 ; 12B: int CreateBook(void * mem, void * onClose, const PAGE_DESC * bp, const char * name, int __0xFFFFFFFF,int __0)
04B0: FFFFFFFF 7d2bE844 ; 12C: void BookObj_KillBook(void *Book)
04B4: FFFFFFFF bd27E844 ; 12D: void BookObj_GotoPage(BOOK * book, const PAGE_DESC * page)
04B8: FFFFFFFF 4529E844 ; 12E: void BookObj_ReturnPage(BOOK * ,int)
04BC: FFFFFFFF 9130E844 ; 12F: void FreeBook ( void *book)

04C0: FFFFFFFF c9b40545 ; 130: void * FindBook(int (* proc)(BOOK * ))
04C4: FFFFFFFF f579EA44 ; 131: BOOK * Find_StandbyBook(void)
04C8: FFFFFFFF f52cE844 ; 132: void BookObj_SetFocus(void *,int focus)
04CC: FFFFFFFF c596D344 ; 133: void SetMenuHeaderText (void * gui , int StrID)
04D0: FFFFFFFF c995D344 ; 134: void ShowWindow (void * gui)
04D4: FFFFFFFF d142D644 ; 135: void SetCursorToItem ( void *obj , int item)
04D8: FFFFFFFF 1996D344 ; 136: void SetMenuStyle ( void *obj , int style)
04DC: FFFFFFFF a549D644 ; 137: int GetCreatedListObjectItemNum ( void *msg)
04E0: FFFFFFFF b549D644 ; 138: char SetMenuItemText0 ( void *msg , int StrID)
04E4: FFFFFFFF e549D644 ; 139: char SetMenuItemText1 ( void *msg , int StrID)
04E8: FFFFFFFF c549D644 ; 13A: char SetMenuItemText2 ( void *msg , int StrID)
04EC: FFFFFFFF d549D644 ; 13B: char SetMenuItemText3 ( void *msg , int StrID)
04F0: FFFFFFFF f549D644 ; 13C: void SetListObjectItemIcon ( void *msg , int align , int iconID)
04F4: FFFFFFFF b1beE844 ; 13D: void SetHeaderText( void *obj , int StrID)
04F8: FFFFFFFF e542D644 ; 13E: int GetFocusetListObjectItem( void *obj)
04FC: FFFFFFFF 3143D644 ; 13F: void SetMenuItemStyle( void *obj , int style)

0500: FFFFFFFF 1932D444 ; 140: void putchar( void *xx , int x, int y, int _zero, int zero1 , short wchar)
0504: FFFFFFFF 59daD344 ; 141: void SetGuiItemText(void *gui,int item,int StrID)
0508: FFFFFFFF 59daD344 ; 142: void StatusIndication_SetItemText(void *gui,int item,int StrID)
050C: FFFFFFFF 4597EA44 ; 143: void StatusIndication_ShowNotes(int StrID)
0510: FFFFFFFF 6189D544 ; 144: void * CreateStringInput(int,...)
0514: FFFFFFFF b158D644 ; 145: void * CreateRadioButtons(void * gui)
0518: FFFFFFFF 7DEED344 ; 146: void SetRadioButtonsCount(void * gui , int count)
051C: FFFFFFFF 0d5aD644 ; 147: void SetRadioButtonsChecked(void * gui , int checked)
0520: FFFFFFFF 355aD644 ; 148: void SetRadioButtonsText(void * gui , int * textTable , int rbCount)
0524: FFFFFFFF 2DEFD344 ; 149: int GetSelectedRadioButton(void * rb)
0528: FFFFFFFF 6196EA44 ; 14A: void StatusIndication_Item8_SetText(int StrID)
052C: FFFFFFFF 09ADD344 ; 14B: void AddMSGHook(void * menu,short msg,void (*proc)(BOOK *,void*))
0530: FFFFFFFF 61AFD344 ; 14C: void AddCommand(void * menu,int cmd , int StrID)
0534: FFFFFFFF b5adD344 ; 14D: void SoftKey_SetEnable(void *gui,int msg,int ena)
0538: FFFFFFFF 8DB0D344 ; 14E: void SoftKey_AddErrorStr(void *gui,int msg,int StrID)
053C: FFFFFFFF d9b0D344 ; 14F: void SoftKey_RemoveItem(void *gui,u16 action)
0540: FFFFFFFF 15AFD344 ; 150: void SoftKey_SetVisible(void *gui,int action,int visible)
0544: FFFFFFFF 4DB3D344 ; 151: void SoftKey_SuppressDefaultAction(void *gui,int action)
0548: FFFFFFFF 5d07BF44 ; 152: u16* wstrcpy(u16 * dest, u16 * source)
054C: FFFFFFFF a507BF44 ; 153: short* wstrncpy(short * dest, short * source, int maxlen)
0550: FFFFFFFF 0508BF44 ; 154: u16* wstrcat(u16 * wstr, u16 * subwstr)
0554: FFFFFFFF 5108BF44 ; 155: short* wstrncat(short * wstr, short * subwstr , int maxlen)
0558: FFFFFFFF 0d07BF44 ; 156: int wstrcmp(unsigned short * wstr1, unsigned short * wstr2)
055C: FFFFFFFF e106BF44 ; 157: int wstrlen(u16 * wstr)
0560: FFFFFFFF b11bBF44 ; 158: u16 * str2wstr(u16 * wstr,char * str)
0564: FFFFFFFF 193FB444 ; 159: int strcmp(char * str1, char * str2)
0568: FFFFFFFF 813fB444 ; 15A: int strlen(char *str)
056C: FFFFFFFF 4509BF44 ; 15B: char * wstr2str (char * str , u16 * wstr)
0570: FFFFFFFF f53dEF44 ; 15C: int int2strID (int num)
0574: FFFFFFFF c541EF44 ; 15D: int Str2ID(const void * wstr , int flag , int len)
0578: FFFFFFFF 954eEF44 ; 15E: void StrID2Str(int StrID,char * str,int maxlen)
057C: FFFFFFFF 5146EF44 ; 15F: void TextID2wstr(int StrID,u16 * str,int maxlen)
0580: FFFFFFFF 3145EF44 ; 160: int TextGetLength(int StrID)

0584: FFFFFFFF 9d44EF44 ; 161: void TextFree(int StrID)
0588: FFFFFFFF 254EDF44 ; 162: int AB_DEFAULTNBR_GET(int rec_num, void * mem_0x30, int * unk)
058C: FFFFFFFF A970DF44 ; 163: int AB_READSTRING(void * mem_0x30,int rec_num, int rec_item_num)
0590: FFFFFFFF 8577DF44 ; 164: int AB_READPHONENBR(void * mem_0x30,int rec_num, int rec_item_num)
0594: FFFFFFFF D178DF44 ; 165: int AB_GETNBROFITEMS(int get_from,int unk_0)

0598: FFFFFFFF 693aEF44 ; 166: int PNUM_len(void *pnum)
059C: FFFFFFFF dd3dF344 ; 167: void PNUM2str(char *str,void *pnum,int len, int max_len)
;05A0: FFFFFFFF a976E544 ; 168:  void * ListElement_GetByNum(LIST *lst,int num_element)--------------------------------------------------
05A0: FFFFFFFF 8167EA44   ; 168:  DISP_BASE * GUIObj_GetDISPObj (void * gui);
05A4: FFFFFFFF 0173E544 ; 169: LIST *List_New(void)
05A8: FFFFFFFF 2573E544 ; 16A: void List_Free(LIST *lst)
05AC: FFFFFFFF 4574E544 ; 16B: void ListElement_AddtoTop(LIST *lst,void *newElement)
05B0: FFFFFFFF 1139F544 ; 16C: int Gif2ID(u16 IMAGEHANDLE,u16 * path, u16 * fname,u16 * ID)
05B4: FFFFFFFF 11eb0D45 ; 16D: int REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE(const int * __zero,u16 * IMAGEHANDLE,u16 * unk)
05B8: FFFFFFFF A5710c45 ; 16E: void REQUEST_DATEANDTIME_GET(const int * __zero , DATETIME * dt)
05BC: FFFFFFFF b9ed0545 ; 16F: void IndicationDevice_Backlight_FadeToLevel(int unk_zero ,int bl_level)
05C0: FFFFFFFF f138F844 ; 170: int GetFreeBytesOnHeap(void)
05C4: FFFFFFFF 252de844 ; 171: void Hide(void * udata)
05C8: FFFFFFFF 392de844 ; 172: void Show(void * udata)
05CC: FFFFFFFF 55DAD344 ; 173: void StartAPP (u16 * appname)

;05D0: FFFFFFFF 3123E844 ; 174:  void CreateEvent(int event) -----------------------------------------------------
05D0: FFFFFFFF 3144D644   ; void ListMenu_SetOnMessages (GUI_LIST * , void * onMessage);
05D4: FFFFFFFF e5e50845 ; 175: char * manifest_GetParam(char *buf,char *param_name,int unk)
05D8: FFFFFFFF 4d700E45 ; 176: int lseek(int file,int offset,int mode)
05DC: FFFFFFFF 4CEA084C ; 177: int get_VBUFFER(void)
05E0: FFFFFFFF cd5aEB44 ; 178: viod SetLampLevel (int level)
05E4: FFFFFFFF cd73E544 ; 179: void * ListElement_Remove(LIST *lst,int index)
05E8: FFFFFFFF cd1C0344 ; 17A: int GetCurrentPID(void)
05EC: FFFFFFFF 0574E544 ; 17B: int ListElement_Prt2NumElement(LIST *lst,void *ptr)

05F0: FFFFFFFF a88C0644 ; 17C: void *alloc(int size,int signo)
05F4: FFFFFFFF c48C0644 ; 17D: void * recive(void *sigsel);
05F8: FFFFFFFF b48C0644 ; 17E: void send(void **sig,int PID);
05FC: FFFFFFFF 048D0644 ; 17F: int sender(void **sig);
0600: FFFFFFFF E48C0644 ; 180: void free_buf(void **sig);
0604: FFFFFFFF a08D0644 ; 181: int create_process(int proc_type,char *name,void (*entrypoint)(void),int stack_size,int priority,int timeslice,int pid_block,void *redir_table,int vector,int user);
0608: FFFFFFFF c08F0644 ; 182: void start (int pid)
060C: FFFFFFFF 708E0644 ; 183: int get_ptype(int pid);
0610: FFFFFFFF bc8D0644 ; 184: int current_process (void);
0614: FFFFFFFF F48C0644   ; 185:  void delay(int timeout);


0680: FFFFFFFF 493fB444 ; 1A0: char* strcpy(char * dest, char * source);
0684: FFFFFFFF 4519CA44 ; 1A1: void *CreateMessage(int size,int ev,char *name);
0688: FFFFFFFF 9919CA44 ; 1A2: void SendMessage(void **signal,int PID);
068C: FFFFFFFF 551aCA44 ; 1A3: void * WaitMessage(void *SIGSEL);
0690: FFFFFFFF 751aCA44 ; 1A4: iint FreeMessage(void **Mess);

0694: FFFFFFFF 1519e444 ; 1A5: void SendDispatchMessage(int id, int unk_zero, int size,void *mess);
0698: FFFFFFFF B5FA1445   ; 1A6:  char * UIEventName (int event);
069C: FFFFFFFF 044D2444   ;81A7:  void *  get_APP_DESC_TABLE(void);

06A0: FFFFFFFF e5b50545 ; 1A8: void UI_Event(int event);
06A4: FFFFFFFF f1b50545 ; 1A9: void UI_Event_wData(int event,void *message,void (*mfree)(void*));
06A8: FFFFFFFF 15b60545 ; 1AA: void UI_Event_toSID(int event,int SessionID);
06AC: FFFFFFFF 25b60545 ; 1AB: void UI_Event_toSIDwData(void *event,int SedionID,void *message,void (*mfree)(void*));
06B0: FFFFFFFF 0977E544 ; 1AC: int ListElement_Find(LIST *lst,void *element, int (*cmp_proc)(void *,void *));

06B4: FFFFFFFF d575E544 ; 1AD: int ListElement_GetByIndex(LIST * , int index);
06B8: FFFFFFFF c91cBF44 ; 1AE: u16* wstrrchr(u16*wstr, u16 wchar);
06BC: FFFFFFFF 3d28E844 ; 1AF: void BookObj_CallSubroutine(BOOK * , void * SubProcDesc);
06C0: FFFFFFFF 5574E544 ; 1B0: void ListElement_Add(LIST *lst,void *newElement);
06C4: FFFFFFFF 7d8aAc44 ; 1B1: printf
06C8: FFFFFFFF 0dd7d344 ; 1B2: int PlayFile(u16 * path, u16 * fname);

06CC: FFFFFFFF e1a9D444 ; 1B3: int GetChargeBatteryInPercent(BOOK *standby , int *level);
06D0: FFFFFFFF 71d31545 ; 1B4: int REQUEST_PROFILE_GETACTIVEPROFILE(const int *__zero , int *level);
06D4: FFFFFFFF 87d31545 ; 1B5: void REQUEST_PROFILE_SETACTIVEPROFILE(const int *__zero , int NUMprof);
06D8: FFFFFFFF 7530EB44 ; 1B6: void SetBrightnessOfScreen(int br);
06DC: FFFFFFFF 1da1D444 ; 1B7: BOOK * Find_KeylockBook(void);
;06E0: FFFFFFFF c10dF744 ; 81B8: IS_NEEDED_BOOK isMediaPlayerVideoBook(void);

06E0: FFFFFFFF c10dF744 ; 81B8: IS_NEEDED_BOOK isMediaPlayerVideoBook(void);
06E4: FFFFFFFF 1927F744 ; 1B9: void VideoOnWholeScreen(BOOK * MediaPlayer_Video_Book);
06E8: FFFFFFFF 1D87D444 ; 1BA: void ShuttingDown(void);
06EC: FFFFFFFF B5AEF844 ; 1BB: void Vibra(int t1, int t2, int t3);
06F0: FFFFFFFF 05740C45 ; 1BC: char REQUEST_DATEFORMAT_GET(const int *SYNC, char *DateFormat);
06F4: FFFFFFFF A5740C45 ; 1BD: char REQUEST_TIMEFORMAT_GET(const int *SYNC, char *TimeFormat);
06F8: FFFFFFFF 6133D344 ; 1BE: int Date2ID(DATE *, char DateFormat);
06FC: FFFFFFFF 7932D344 ; 1BF: int Time2ID(int *, char TimeFormat);

0700: FFFFFFFF 4541D644 ; 1C0: LIST_OBJECT * CreateListObject(BOOK * , void * unk);
0704: FFFFFFFF 0143D644 ; 1C1: void SetNumOfMenuItem(void * , int item_count);
0708: FFFFFFFF F427184C ;81C2: void * ROOT_APP(void);

070C: FFFFFFFF 61AFD344   ; 1C3: void SoftKey_AddHelpStr(void *gui,int msg,int StrID);
0710: FFFFFFFF c1b1D344   ; 1C4: void SoftKey_SetItemAsSubItem(void *gui,int item,int subitem);
0714: FFFFFFFF 15131545   ; 1C5: int REQUEST_SYSTEM_SHUTDOWN(void);
0718: FFFFFFFF 25131545   ; 1C6: int REQUEST_SYSTEM_RESTART(void);
071C: FFFFFFFF 39AED344   ; 1C7: void SoftKeys_SetText(void *gui,int msg,int StrID,int StrID1);

0720: FFFFFFFF C1871245   ; 1C8: int isRightNowBook(BOOK *);
0724: FFFFFFFF FD0F1545   ; 1C9: int isVolumeControllerBook(BOOK *);

0728: FFFFFFFF DDB5D344   ; 1CA: GUI_TABMENUBAR * CreateTabMenuBar(BOOK *);
072C: FFFFFFFF FDB6D344   ; 1CB: void TabMenuBar_SetTabCount(GUI_TABMENUBAR * , int count);
0730: FFFFFFFF E9B7D344   ; 1CC: void TabMenuBar_AssignGuiObj(GUI_TABMENUBAR * , int tab , GUI*);
0734: FFFFFFFF 59B8D344   ; 1CD: void TabMenuBar_SetTabIcon(GUI_TABMENUBAR *,int tab, u16 icon , int for_state);
0738: FFFFFFFF 3965EA44   ; 1CE: void  GUI_Free(void*);
073C: FFFFFFFF 4999D344   ; 1CF: void GUI_SetIcon(GUI* , int icon);
0740: FFFFFFFF 2196D544   ; 1D0: int StringInput_GetStringAndLen (GUI*,u16**,u16*);
;0744: FFFFFFFF    ; 1D1:
;0748: FFFFFFFF    ; 1D2:
074C: FFFFFFFF 957F0E45   ; 1D3: int GetVolumeSize(char * volume, VOLUMESIZE *);
0750: FFFFFFFF 2956D644   ; 1D4: GUI_NOFMANY * CreateNOfMany(BOOK *);
0754: FFFFFFFF F957D644   ; 1D5: void NOfMany_SetTexts(GUI_NOFMANY * , int * StrIDtable, int items_count);
0758: FFFFFFFF 5D57D644   ; 1D6: void NOfMany_SetChecked(GUI_NOFMANY * , u16 * checked_table, int items_count);
075C: FFFFFFFF 1D57D644   ; 1D7: void NOfMany_SetCursor(GUI_NOFMANY * , int item);
0760: FFFFFFFF 8557D644   ; 1D8: int NOfMany_GetCheckedCount(GUI_NOFMANY *);
0764: FFFFFFFF 7157D644   ; 1D9: int NOfMany_GetChecked(GUI_NOFMANY * , u16 * buffer );
0768: FFFFFFFF F157D644   ; 1DA: void NOfMany_SetonMessage(GUI_NOFMANY * , void * proc );
;076C: FFFFFFFF    ; 1DB:
;0770: FFFFFFFF    ; 1DC:
;0774: FFFFFFFF    ; 1DD:
;0778: FFFFFFFF    ; 1DE:
;077C: FFFFFFFF    ; 1DF:
0780: FFFFFFFF CD59D644   ; 1E0: void OneOfMany_SetFocused(GUI_ONEOFMANY * , int item);
0784: FFFFFFFF 2D5AD644   ; 1E1: void OneOfMany_SetonMessage(GUI_ONEOFMANY * , void * proc);
;---
0788: FFFFFFFF 81BDD344   ; 1E2: GUI_FEEDBACK * CreateFeedBack (int,...);
078C: FFFFFFFF 2DBED344   ; 1E3: void  FeedBack_SetText(GUI_FEEDBACK*,int);
0790: FFFFFFFF C1467144   ; 1E4: int GetBattaryState(const int * , BATT *);
0794: FFFFFFFF 3927D444   ; 1E5: void * get_DisplayGC (void);
0798: FFFFFFFF 29A4E844   ; 1E6: void GetGuiRect(void*,RECT*);
079C: FFFFFFFF 0D2DD444   ; 1E7: void get_GC_RECT(void*,RECT*);
07A0: FFFFFFFF 2130D444   ; 1E8: char *get_GC_xx(void * GC);
07A4: FFFFFFFF 1530D444   ; 1E9: void *set_GC_xx(void * GC, int);
07A8: FFFFFFFF B52CD444   ; 1EA: void GC_validate_RECT(void * GC , RECT*);
07AC: FFFFFFFF 052EE844   ; 1EB: void addGui2book(BOOK*,GUI*)
07B0: FFFFFFFF 71D9E844   ; 1EC: void DrawRect(int x1, int y1,int x2 ,int y2,int pen_color,int brush_color);
07B4: FFFFFFFF 79DDE844   ; 1ED: void DrawString(int StrID,int align,int x1,int y1,int x2,int y2,int unk,int unk1,int pen_color ,int brush_color);
07B8: FFFFFFFF F168EA44   ; 1EE: void addGui2XGuiList (void* xguilist , GUI*);
07BC: FFFFFFFF A9A2E844   ; 1EF: void InvalidateRect(DISP_BASE *,RECT*);

07C0: FFFFFFFF C164EA44   ; 1F0: int CreateObject(GUI*,void (*)(DISP_DESC *),void (*)(DISP_DESC *),BOOK *,int,int);
07C4: FFFFFFFF CDE8E844   ; 1F1: void SetFont(int);
07C8: FFFFFFFF 5427184C   ;81F2: StatusRow_p;
07CC: FFFFFFFF BDB50545   ; 1F3: int root_list_get_session_count(void);
07D0: FFFFFFFF D1B50545   ; 1F4: UI_APP_SESSION *root_list_get_session(int num_session);
07D4: FFFFFFFF E9AE0545   ; 1F5: BOOK *SESSION_GetTopBook(UI_APP_SESSION *);

07D8: FFFFFFFF A9C5D344   ; 1F6: int MainInput_getVisible(GUI *);
07DC: FFFFFFFF B5C5D344   ; 1F7: int MainInput_strlen(GUI *);
07E0: FFFFFFFF C9c5D344   ; 1F8:  char * MainInput_getPNUM(GUI *);
07E4: FFFFFFFF D5C5D344   ; 1F9: int MainInput_isPlus(GUI *);
07E8: FFFFFFFF E531E844   ; 1FA: int BOOK_GetSessionID(BOOK * );
07EC: FFFFFFFF 3D1CBF44   ; 1FB: int wstrncmp(u16*,u16*,int);
07F0: FFFFFFFF 6DBDE844   ; 1FC: int DISP_BASE_GetAbsoluteXPos(DISP_BASE *);
07F4: FFFFFFFF 95BDE844   ; 1FD: int DISP_BASE_GetAbsoluteYPos(DISP_BASE *);
07F8: FFFFFFFF B1A8E844   ; 1FE: WINDOW * DISP_BASE_GetWindow(DISP_BASE *);
07FC: FFFFFFFF F92E0645   ; 1FF: int GetThemeColor(int , int);

0800: FFFFFFFF 79CB1545   ; 200: int REQUEST_SETTING_SILENCE_SET(const int * __zero,u16 profile,u16 value);
0804: FFFFFFFF 1DCB1545   ; 201: int REQUEST_SETTING_SILENCE_GET(const int * __zero,u16 profile, char * silence_mode);
0808: FFFFFFFF E58DDE44   ; 202: void VCALL_Init (void* vc);
080C: FFFFFFFF D98EDE44   ; 203: void VCALL_SetName (void * vc , u16 * name ,char name_len);
0810: FFFFFFFF 358FDE44   ; 204: void VCALL_SetNameIcon (void * vc , u16 icon);
0814: FFFFFFFF F98EDE44   ; 205: void VCALL_SetNumber (void * vc , u16 * number , char num_len);
0818: FFFFFFFF 218FDE44   ; 206: void VCALL_SetHZ1 (void * vc, int , u16 );
081C: FFFFFFFF 2D8FDE44   ; 207: void VCALL_SetHZ2 (void * vc , u16 );
0820: FFFFFFFF 9D85DE44   ; 208: void MakeVoiceCall (int SessioID , void * vc ,int flag);
0824: FFFFFFFF 094C1445   ; 209: int isDirectory (u16 * path ,u16 * filename , int * error );
0828: FFFFFFFF 3D610E45   ; 20A: void FileDelete (u16 * path ,u16 * filename , int * error );
082C: FFFFFFFF DD97D344   ; 20B: void SetFocus (GUI * , int);

0830: FFFFFFFF E11CFA44   ; 20C: int CreateSMSCont (int, void*);
0834: FFFFFFFF 7921FA44   ; 20D: int FreeSMSCont (void*);
0838: FFFFFFFF 411EFA44   ; 20E: int PrepareSMSCont (void*,u16*,u16*,int,int);
083C: FFFFFFFF C920FA44   ; 20F: int CteateNewMessage (int,void*,int);

0840: FFFFFFFF 044D2444   ; 210: get_APP_DESC_TABLE(void);
0844: FFFFFFFF D193D344   ; 211: C_INTERFACE *Window_GetComponentInterface (WINDOW*)
0848: FFFFFFFF ED7DDF44   ; 212: int AB_POSITIONNBR_GET(void * ab_name,char * ,u16 * ,void * ab_num);
084C: FFFFFFFF 917ADF44   ; 213: int AB_NAME_ITEM2StrID(void * ab_name,char * ,u16 * ,void * ab_num);
0850: FFFFFFFF F97ADF44   ; 214: int AB_NUM_ITEM2StrID(void * ab_num_item);
0854: FFFFFFFF B1430A45   ; 215: int GetABRecNum(AB_GET_STRUCT *);
0858: FFFFFFFF 308F2144   ;8216: AB_ITEM_DESC * get_AB_ITEMS_DESC()
085C: FFFFFFFF 192A0B45   ; 217: GUI * SBY_GetMainInput(BOOK * StandBy);
0860: FFFFFFFF 152A0B45   ; 218: GUI * SBY_GetStatusIndication(BOOK * StandBy);
0864: FFFFFFFF ED9A0C45   ; 219: int REQUEST_PHONEBOOK_ACCESSSTATUS_TOTAL_GET(const int * __zero, int *)
0868: FFFFFFFF E47B0C4C   ; 21A: int * PID_MMI(void);
;086C: FFFFFFFF    ; 21B:
;0870: FFFFFFFF    ; 21C:
0874: FFFFFFFF 119DE844   ; 21D: DISP_BASE* DISPBASE_GetFocused(int display);
;---
0878: FFFFFFFF 5DA1E844   ; 21E: char DISP_BASE_getVisible(DISP_BASE*);
;---
087C: FFFFFFFF E5F50645   ; 21F: DISP_DESC* DISP_BASE_GetDESC (DISP_BASE*);

0880: FFFFFFFF DD94e844   ; 220: void DISP_DESC_SetName (DISP_DESC *  , char * name);
0884: FFFFFFFF 25BCE844   ; 221: char* DISP_BASE_GetName (DISP_BASE *);
0888: FFFFFFFF 0595e844   ; 222: void DISP_DESC_SetSize (DISP_DESC* , u16 size);
;088C: FFFFFFFF    ; 223: u16 DISP_DESC_GetSize (DISP_BASE *);
0890: FFFFFFFF 2595e844   ; 224: void DISP_DESC_SetOnCreate (DISP_DESC* , DISP_BASE_ONCREATE_METHOD);
0894: FFFFFFFF D198E844   ; 225: DISP_BASE_ONCREATE_METHOD DISP_BASE_GetOnCreate (DISP_BASE *);
0898: FFFFFFFF 4595e844   ; 226: void DISP_DESC_SetOnClose (DISP_DESC* , DISP_BASE_ONCLOSE_METHOD);
089C: FFFFFFFF E598E844   ; 227: DISP_BASE_ONCLOSE_METHOD DISP_BASE_GetOnClose (DISP_BASE *);
08A0: FFFFFFFF 6595e844   ; 228: void DISP_DESC_SetOnRedraw (DISP_DESC* , DISP_BASE_ONREDRAW_METHOD);
08A4: FFFFFFFF F998E844   ; 229: DISP_BASE_ONREDRAW_METHOD DISP_BASE_GetOnRedraw (DISP_BASE *);
08A8: FFFFFFFF a595e844   ; 22A: void DISP_DESC_SetOnKey (DISP_DESC* , DISP_BASE_ONKEY_METHOD);
08AC: FFFFFFFF 2199E844   ; 22B: DISP_BASE_ONKEY_METHOD DISP_BASE_GetOnKey (DISP_BASE *);
;08B0: FFFFFFFF    ; 22C: void DISP_DESC_SetMethod03 (DISP_DESC* ,void (*)(void*));
;08B4: FFFFFFFF    ; 22D: DISP_BASE_METHOD DISP_BASE_GetMethod03 (DISP_BASE *);
;08B8: FFFFFFFF    ; 22E: void DISP_DESC_SetMethod04 (DISP_DESC* ,void (*)(void*));
;08BC: FFFFFFFF    ; 22F: DISP_BASE_METHOD DISP_BASE_GetMethod04 (DISP_BASE *);

;08C0: FFFFFFFF    ; 230: void DISP_DESC_SetMethod05 (DISP_DESC* ,void (*)(void*));
;08C4: FFFFFFFF    ; 231: DISP_BASE_METHOD DISP_BASE_GetMethod05 (DISP_BASE *);
08C8: FFFFFFFF C595e844   ; 232: void DISP_DESC_SetMethod06 (DISP_DESC* ,void (*)(void*));
08CC: FFFFFFFF c595e844   ; 233: DISP_BASE_METHOD DISP_BASE_GetMethod06 (DISP_BASE *);
;08D0: FFFFFFFF    ; 234: void DISP_DESC_SetMethod07 (DISP_DESC* ,void (*)(void*));
;08D4: FFFFFFFF    ; 235: DISP_BASE_METHOD DISP_BASE_GetMethod07 (DISP_BASE *);
;08D8: FFFFFFFF    ; 236: void DISP_DESC_SetMethod08 (DISP_DESC* ,void (*)(void*));
;08DC: FFFFFFFF    ; 237: DISP_BASE_METHOD DISP_BASE_GetMethod08 (DISP_BASE *);
;08E0: FFFFFFFF    ; 238: void DISP_DESC_SetMethod09 (DISP_DESC* ,void (*)(void*));
;08E4: FFFFFFFF    ; 239: DISP_BASE_METHOD DISP_BASE_GetMethod09 (DISP_BASE *);
;08E8: FFFFFFFF    ; 23A: void DISP_DESC_SetMethod0A (DISP_DESC* ,void (*)(void*));
;08EC: FFFFFFFF    ; 23B: DISP_BASE_METHOD DISP_BASE_GetMethod0A (DISP_BASE *);
;08F0: FFFFFFFF    ; 23C: void DISP_DESC_SetMethod0B (DISP_DESC* ,void (*)(void*));
;08F4: FFFFFFFF    ; 23D: DISP_BASE_METHOD DISP_BASE_GetMethod0B (DISP_BASE *);
;08F8: FFFFFFFF    ; 23E: void DISP_DESC_SetMethod0C (DISP_DESC* ,void (*)(void*));
;08FC: FFFFFFFF    ; 23F: DISP_BASE_METHOD DISP_BASE_GetMethod0C (DISP_BASE *);
;14.01.2008
;0900: FFFFFFFF ; 240: void JavaSession_Manager (int cmd);
;0904: FFFFFFFF ; 241: int JavaSession_GetName(coid);
0908: FFFFFFFF 3143EF44 ; 242: int TextCopyId(int);
090C: FFFFFFFF D530E844 ; 243: UI_APP_SESSION *Book_GetSession(BOOK*);
0910: FFFFFFFF 414AD644 ; 244: void List2lineSetAsSubitem (void* msg,int unk,int n_sub_items);
0914: FFFFFFFF B14AD644 ; 245: void List2lineSubitemAddText(void* msg,int StrID);
0918: FFFFFFFF A14AD644 ; 246: int GUIonMessage_GetCreatedSubItemParrentIndex(void * msg);
;17.01.2008
091c: FFFFFFFF A5C8D144 ; 247: go_music (int go);
0920: FFFFFFFF 85AFF844 ; 248: void Vibra_Off(int t1);
0924: FFFFFFFF 8527F744 ; 249: void VideoOnNormalScreen(BOOK * MediaPlayer_Video_Book);

0954: FFFFFFFF A0C72244  ;8255: DB_EXT *LastExtDB(void);
0958: FFFFFFFF 01750F45  ;256: void GetOtherExtMethods(FILESUBROUTINE **);
