;W700 SW-R1CA021
;Библиотека функций
;v221207
;
;(c) Hussein , IronMaster
;(p) d1gger17

+451E7C00
0440: FFFFFFFF 7D9DF844 ; 110: void *memalloc(int size,int f1,int f2,const char *fname,int fline)
0444: FFFFFFFF 99AEF844 ; 111: void memfree(void * mem,const char * fname ,int fline)
0448: FFFFFFFF 9968B444 ; 112: void memset(void *mem,char chr,int size)
044C: FFFFFFFF 549D0644 ; 113: int memcpy(void *dest,const void *source,int cnt)
0450: FFFFFFFF C173B444 ; 114: int sprintf(char *buf, char *str, ...)
0454: FFFFFFFF A57AB444 ; 115: int snwprintf(u16* buffer, int size, const u16* fmt, ...)
0458: FFFFFFFF 75C30E45 ; 116: int _fopen(const unsigned short *filpath, const unsigned short *filname,unsigned int mode , unsigned int rights, unsigned int __0)
045C: FFFFFFFF 55D50E45 ; 117: int fclose(int file)
0460: FFFFFFFF 71D80E45 ; 118: int fread(int file , void *ptr, int size)
0464: FFFFFFFF 0DDB0E45 ; 119: int fwrite(int file , const void *ptr, int size)
0468: FFFFFFFF 85D17644 ; 11A: int _wstat(short *path, void *statbuf)
046C: FFFFFFFF 01FECF44 ; 11B: int fputs(const char *s, int file)
0470: FFFFFFFF 35CC0E45 ; 11C: int isFileExist(u16 * pach, u16 *fname , FSTAT * fstat_stuct)
0474: FFFFFFFF EDA80E45 ; 11D: void * AllocDirHandle(u16 * path)
0478: FFFFFFFF 91AA0E45 ; 11E: void *GetFname(void *, void*)
047C: FFFFFFFF FDB6E244 ; 11F: void * CreateDataBrowser(void)
0480: FFFFFFFF 15B5E244 ; 120: void DataBrowser_SetStyle(void * db , int style)
0484: FFFFFFFF A5B5E244 ; 121: void DataBrowser_SetHeaderText(void * db , int StrID)
0488: FFFFFFFF 5DB5E244 ; 122: void DataBrowser_SetFolders(void * db , int * FolderList)
048C: FFFFFFFF C9B5E244 ; 123: void DataBrowser_SetOKSoftKeyText(void * db , int StrID)
0490: FFFFFFFF 65A7E244 ; 124: void DataBrowser_Show(void * db)
0494: FFFFFFFF 66B7E244 ; 125: void DataBrowser_XXX(void * db)
0498: FFFFFFFF 25EC0E45 ; 126: unsigned short * getFileExtention(unsigned short * fnane)
049C: FFFFFFFF 25AD0E45 ; 127: int DataBrowser_isFileInListExt(unsigned short * ext_table,unsigned short * patch ,unsigned short * fname )
04A0: FFFFFFFF 757EE844 ; 128: void Timer_ReSet(u16 *timerID ,int time, void (*onTimer)(u16 * unk , void *), void*)
04A4: FFFFFFFF 3D7EE844 ; 129: u16 Timer_Set(int time, void (*onTimer)(u16 * unk , void *), void*)
04A8: FFFFFFFF C57EE844 ; 12A: void Timer_Kill(u16 *timerID)
04AC: FFFFFFFF FD8AE844 ; 12B: int CreateBook(void * mem, void (* onClose)(BOOK*), const PAGE_DESC * bp, const char * name, int __0xFFFFFFFF,int __0)
04B0: FFFFFFFF 158CE844 ; 12C: void BookObj_KillBook(void *Book)
04B4: FFFFFFFF 5588E844 ; 12D: void BookObj_GotoPage(BOOK * book, const PAGE_DESC * page)
04B8: FFFFFFFF DD89E844 ; 12E: void BookObj_ReturnPage(BOOK * ,int)
04BC: FFFFFFFF 2991E844 ; 12F: void FreeBook ( void *book)
04C0: FFFFFFFF 09210645 ; 130: BOOK * FindBook(IS_NEEDED_BOOK)
04C4: FFFFFFFF 8DDAEA44 ; 131: BOOK * Find_StandbyBook(void)
04C8: FFFFFFFF 8D8DE844 ; 132: void BookObj_SetFocus(void *,int focus)
04CC: FFFFFFFF 91D8D344 ; 133: void GuiObject_SetTitleText (void * gui , int StrID)
04D0: FFFFFFFF 95D7D344 ; 134: void ShowWindow (void * gui)
04D4: FFFFFFFF 8D85D644 ; 135: void SetCursorToItem ( void *obj , int item)
04D8: FFFFFFFF E5D7D344 ; 136: void GUI_SetStyle(GUI_NOFMANY *,int style)
04DC: FFFFFFFF 618CD644 ; 137: int GUIonMessage_GetCreatedItemIndex ( void *msg)
04E0: FFFFFFFF 718CD644 ; 138: char SetMenuItemText0 ( GUI_MESSAGE *, int StrID)
04E4: FFFFFFFF A18CD644 ; 139: char SetMenuItemText1 ( GUI_MESSAGE *, int StrID)
04E8: FFFFFFFF 818CD644 ; 13A: char SetMenuItemText2 ( GUI_MESSAGE *, int StrID)
04EC: FFFFFFFF 918CD644 ; 13B: char SetMenuItemText3 ( GUI_MESSAGE *, int StrID)
04F0: FFFFFFFF B18CD644 ; 13C: void SetListObjectItemIcon ( void *msg , int align , int iconID)
04F4: FFFFFFFF 491FE944 ; 13D: void SetHeaderText( void *obj , int StrID)
04F8: FFFFFFFF A185D644 ; 13E: int GetFocusetListObjectItem( void *obj)
04FC: FFFFFFFF ED85D644 ; 13F: void SetMenuItemStyle( void *obj , int style)
0500: FFFFFFFF E573D444 ; 140: void putchar( void *xx , int x, int y, int _zero, int zero1 , short wchar)
;0504: FFFFFFFF 251CD444 ; 141: void SetGuiItemText(void *gui,int item,int StrID)
0508: FFFFFFFF 251CD444 ; 142: void StatusIndication_SetItemText(void *gui,int item,int StrID)
050C: FFFFFFFF DDF7EA44 ; 143: void StatusIndication_ShowNotes(int StrID)
0510: FFFFFFFF DDCBD544 ; 144: void * CreateStringInput(int,...)
0514: FFFFFFFF 7D9BD644 ; 145: GUI_ONEOFMANY * CreateOneOfMany(BOOK *)
0518: FFFFFFFF 4930D444 ; 146: void OneOfMany_SetItemCount(GUI_ONEOFMANY * , int count)
051C: FFFFFFFF D99CD644 ; 147: void OneOfMany_SetChecked(GUI_ONEOFMANY * , int checked)
0520: FFFFFFFF 019DD644 ; 148: void OneOfMany_SetTexts(GUI_ONEOFMANY * , int * StrID , int Count)
0524: FFFFFFFF F930D444 ; 149: int OneOfMany_GetSelected(GUI_ONEOFMANY * rb)
0528: FFFFFFFF F9F6EA44 ; 14A: void StatusIndication_Item8_SetText(int StrID)
052C: FFFFFFFF D5EED344 ; 14B: void AddMSGHook(void * menu,short msg,void (*proc)(BOOK *,void*))
0530: FFFFFFFF BDEFD344 ; 14C: void AddCommand(void * menu,int cmd , int StrID)
0534: FFFFFFFF 2DF1D344 ; 14D: void SoftKey_SetEnable(void *gui,int msg,int ena)
0538: FFFFFFFF 99F0D344 ; 14E: void SoftKey_AddErrorStr(void *gui,int msg,int StrID)
053C: FFFFFFFF 65EED344 ; 14F: void SoftKey_RemoveItem(void *gui,u16 action)
0540: FFFFFFFF 55F0D344 ; 150: void SoftKey_SetVisible(void *gui,int action,int visible)
0544: FFFFFFFF 19F5D344 ; 151: void SoftKey_SuppressDefaultAction(void *gui,int action)
0548: FFFFFFFF 714ABF44 ; 152: u16* wstrcpy(u16 * dest, u16 * source)
054C: FFFFFFFF B94ABF44 ; 153: u16* wstrncpy(u16 * dest, u16 * source, int maxlen)
0550: FFFFFFFF 194BBF44 ; 154: u16* wstrcat(u16 * wstr, u16 * subwstr)
0554: FFFFFFFF 654BBF44 ; 155: short* wstrncat(short * wstr, short * subwstr , int maxlen)
0558: FFFFFFFF 214ABF44 ; 156: int wstrcmp(unsigned short * wstr1, unsigned short * wstr2)
055C: FFFFFFFF F549BF44 ; 157: int wstrlen(u16 * wstr)
0560: FFFFFFFF C55EBF44 ; 158: u16 * str2wstr(u16 * wstr,char * str)
0564: FFFFFFFF 2578B444 ; 159: int strcmp(char * str1, char * str2)
0568: FFFFFFFF 8D78B444 ; 15A: int strlen(char *str)
056C: FFFFFFFF 594CBF44 ; 15B: char * wstr2strn (char * str , u16 * wstr, int maxlen)
0570: FFFFFFFF 5D9FEF44 ; 15C: int int2strID (int num)
0574: FFFFFFFF 2DA3EF44 ; 15D: int Str2ID(const void * wstr , int flag , int len)
0578: FFFFFFFF FDAFEF44 ; 15E: void StrID2Str(int StrID,char * str,int maxlen)
057C: FFFFFFFF B9A7EF44 ; 15F: void TextID2wstr(int StrID,u16 * str,int maxlen)
0580: FFFFFFFF 99A6EF44 ; 160: int TextGetLength(int StrID)
0584: FFFFFFFF 05A6EF44 ; 161: void TextFree(int StrID)
0588: FFFFFFFF B5AFDF44 ; 162: int AB_DEFAULTNBR_GET(int rec_num, void * mem_FFFFFFFF 30, int * unk)
058C: FFFFFFFF 29D2DF44 ; 163: int AB_READSTRING(void * mem_FFFFFFFF 30,int rec_num, int rec_item_num)
0590: FFFFFFFF 05D9DF44 ; 164: int AB_READPHONENBR(void * mem_FFFFFFFF 30,int rec_num, int rec_item_num)
0594: FFFFFFFF 51DADF44 ; 165: int AB_GETNBROFITEMS(int get_from,int unk_0)
0598: FFFFFFFF D19BEF44 ; 166: int PNUM_len(void *pnum)
059C: FFFFFFFF 49ADF344 ; 167: void PNUM2str(char *str,void *pnum,int len, int max_len)
05A0: FFFFFFFF D1E1E944 ; 168: DISP_OBJ * GUIObj_GetDISPObj (void * gui);
05A4: FFFFFFFF 91D3E544 ; 169: LIST *List_New(void)
05A8: FFFFFFFF B5D3E544 ; 16A: void List_Free(LIST *lst)
05AC: FFFFFFFF D5D4E544 ; 16B: void ListElement_AddtoTop(LIST *lst,void *newElement)
05B0: FFFFFFFF F1ADF544 ; 16C: int Gif2ID(u16 IMAGEHANDLE,u16 * path, u16 * fname,u16 * ID)
05B4: FFFFFFFF 5D570E45 ; 16D: int REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE(const int * __zero,u16 * IMAGEHANDLE,u16 * unk)
05B8: FFFFFFFF EDDD0C45 ; 16E: void REQUEST_DATEANDTIME_GET(const int * __zero , DATETIME * dt)
05BC: FFFFFFFF 115A0645 ; 16F: void IndicationDevice_Backlight_FadeToLevel(int unk_zero ,int bl_level)
05C0: FFFFFFFF 21C2F844 ; 170: int GetFreeBytesOnHeap(void)
05C4: FFFFFFFF BD8DE844 ; 171: void Hide(void * udata, int zero)
05C8: FFFFFFFF D18DE844 ; 172: void Show(void * udata, int zero)
05CC: FFFFFFFF 6DFCEA44 ; 173: void StartAPP (u16 * appname)
05D0: FFFFFFFF FD9DD544 ; 174: void ListMenu_SetOnMessages (GUI_LIST * , void * onMessage);
05D4: FFFFFFFF 45520945 ; 175: char * manifest_GetParam(char *buf,char *param_name,int unk)
05D8: FFFFFFFF 99DC0E45 ; 176: int lseek(int file,int offset,int mode)
05DC: FFFFFFFF A474094C ;
05E0: FFFFFFFF 59BBEB44 ; 178: viod SetLampLevel (int level)
05E4: FFFFFFFF 5DD4E544 ; 179: void * ListElement_Remove(LIST *lst,int index)
05E8: FFFFFFFF C11C0344 ; 17A: int GetCurrentPID(void)
05EC: FFFFFFFF 95D4E544 ; 17B: int ListElement_Prt2NumElement(LIST *lst,void *ptr)
05F0: FFFFFFFF 9C8C0644 ; 17C: void *alloc(int size,int signo)
05F4: FFFFFFFF B88C0644 ; 17D: void * recive(const SIGSELECT *sigsel)
05F8: FFFFFFFF A88C0644 ; 17E: void send(union SIGNAL **sig,int PID)
05FC: FFFFFFFF F88C0644 ; 17F: int sender(void **sig)
0600: FFFFFFFF C88C0644 ; 180: void free_buf(void **sig)
0604: FFFFFFFF 948D0644 ; 181: int create_process(int proc_type,char *name,void (*entrypoint)(void),int stack_size,int priority,int timeslice,int pid_block,void *redir_table,int vector,int user)
0608: FFFFFFFF B48F0644 ; 182: void start (int pid)
060C: FFFFFFFF 648E0644 ; 183: int get_ptype(int pid)
0610: FFFFFFFF B08D0644 ; 184: int current_process (void)
0614: FFFFFFFF E88C0644 ; 185: int delay (int timeout)
0680: FFFFFFFF 5578B444 ; 1A0: char* strcpy(char * dest, char * source)
0684: FFFFFFFF 595CCA44 ; 1A1: void *CreateMessage(int size,int ev,char *name)
0688: FFFFFFFF AD5CCA44 ; 1A2: void SendMessage(void **signal,int PID)
068C: FFFFFFFF 695DCA44 ; 1A3: void * WaitMessage(void *SIGSEL)
0690: FFFFFFFF 895DCA44 ; 1A4: int FreeMessage(void **Mess)
0694: FFFFFFFF A97AE444 ; 1A5: void SendDispatchMessage(int id, int unk_zero, int size,void *mess)
0698: FFFFFFFF B1661545 ; 1A6: isBookFocused(BOOK * book)
;069C: FFFFFFFF 28552444 ; 1A7: void * void * get_APP_DESC_TABLE(void)
06A0: FFFFFFFF 25220645 ; 1A8: void UI_Event(int event)
06A4: FFFFFFFF 31220645 ; 1A9: void UI_Event_wData(int event,void *message,void (*mfree)(void*))
06A8: FFFFFFFF 55220645 ; 1AA: void UI_Event_toSID(int event,int SessionID)
06AC: FFFFFFFF 55220645 ; 1AB: void UI_Event_toSIDwData(void *event,int SedionID,void *message,void (*mfree)(void*))
06B0: FFFFFFFF 99D7E544 ; 1AC: int ListElement_Find(LIST *lst,void *element, int (*cmp_proc)(void *,void *))
06B4: FFFFFFFF 65D6E544 ; 1AD: void * ListElement_GetByIndex(LIST * , int index)
06B8: FFFFFFFF DD5FBF44 ; 1AE: u16* wstrrchr(u16*wstr, u16 wchar)
06BC: FFFFFFFF D588E844 ; 1AF: void BookObj_CallSubroutine(BOOK * , void * SubProcDesc)
06C0: FFFFFFFF E5D4E544 ; 1B0: void ListElement_Add(LIST *lst,void *newElement)
06C4: FFFFFFFF 1570AF44 ; 1B1: void debug_printf(char * fmt,...)
06C8: FFFFFFFF D918D444 ; 1B2: int PlayFile(u16 * path, u16 * fname)
06E0: FFFFFFFF A5EBD444 ; 81B8: IS_NEEDED_BOOK isMediaPlayerVideoBook(void)
06E4: FFFFFFFF 28552444 ; 81B9: void * get_APP_DESC_TABLE(void)
06E8: FFFFFFFF E9C8D444 ; 1BA: void ShuttingDown(void)
06EC: FFFFFFFF E537F944 ; 1BB: void Vibra(int t1, int t2, int t3)
06F0: FFFFFFFF 4DE00C45 ; 1BC: void GetDateFormat(const int *zero, char *level)
06F4: FFFFFFFF EDE00C45 ; 1BD: void GetTimeFormat(const int *zero, char *level)
06F8: FFFFFFFF 1975D344 ; 1BE: int Date2ID(int *, char DateFormat)
06FC: FFFFFFFF 3174D344 ; 1BF: int Time2ID(TIME *, char TimeFormat,int)
0700: FFFFFFFF 0184D644 ; 1C0: GUI_LIST * CreateListObject(BOOK * , void * unk)
0704: FFFFFFFF BD85D644 ; 1C1: void SetNumOfMenuItem(void * , int item_count)
0708: FFFFFFFF 2825184C ;81C2: LIST ** ROOT_APP(void)
070C: FFFFFFFF 4561DE44 ; 1C3: void SoftKey_AddHelpStr(void *gui,int msg,int StrID)
0710: FFFFFFFF 79F1D344 ; 1C4: void SoftKey_SetItemAsSubItem(void *gui,int item,int subitem)
0714: FFFFFFFF 117F1545 ; 1C5: int REQUEST_SYSTEM_SHUTDOWN(void)
0718: FFFFFFFF 217F1545 ; 1C6: int REQUEST_SYSTEM_RESTART(void)
071C: FFFFFFFF 05F0D344 ; 1C7: void SoftKeys_SetText(void *gui,int msg,int StrID,int StrID1)
0720: FFFFFFFF CDF31245 ; 1C8: int isRightNowBook(BOOK *)
0724: FFFFFFFF F97B1545 ; 1C9: int isVolumeControllerBook(BOOK *)
0728: FFFFFFFF A9F7D344 ; 1CA: GUI_TABMENUBAR * CreateTabMenuBar(BOOK *)
072C: FFFFFFFF C9F8D344 ; 1CB: void TabMenuBar_SetTabCount(GUI_TABMENUBAR * , int count)
0730: FFFFFFFF B5F9D344 ; 1CC: void TabMenuBar_AssignGuiObj(GUI_TABMENUBAR * , int tab , GUI*)
0734: FFFFFFFF 25FAD344 ; 1CD: void TabMenuBar_SetTabIcon(GUI_TABMENUBAR *,int tab, u16 icon , int for_state)
0738: FFFFFFFF C9C5EA44 ; 1CE: void GUI_Free(GUI*)
073C: FFFFFFFF 15DBD344 ; 1CF: void GUI_SetIcon(GUI* , int icon)
0740: FFFFFFFF 9DD8D544 ; 1D0: int StringInput_GetStringAndLen (GUI*,u16**,u16*)
074C: FFFFFFFF E1EB0E45 ; 1D3: int GetVolumeSize(char * volume, VOLUMESIZE *)
0750: FFFFFFFF F598D644 ; 1D4: GUI_NOFMANY * CreateNOfMany(BOOK *)
0754: FFFFFFFF C59AD644 ; 1D5: void NOfMany_SetTexts(GUI_NOFMANY * , int * StrIDtable, int items_count)
0758: FFFFFFFF 299AD644 ; 1D6: void NOfMany_SetChecked(GUI_NOFMANY * , u16 * checked_table, int items_count)
075C: FFFFFFFF E999D644 ; 1D7: void NOfMany_SetCursor(GUI_NOFMANY * , int item)
0760: FFFFFFFF 519AD644 ; 1D8: int NOfMany_GetCheckedCount(GUI_NOFMANY *)
0764: FFFFFFFF 3D9AD644 ; 1D9: int NOfMany_GetChecked(GUI_NOFMANY * , u16 * buffer )
0768: FFFFFFFF BD9AD644 ; 1DA: void NOfMany_SetonMessage(GUI_NOFMANY * , void * proc )
0780: FFFFFFFF 999CD644 ; 1E0: void OneOfMany_SetFocused(GUI_ONEOFMANY * , int item)
0784: FFFFFFFF F99CD644 ; 1E1: void OneOfMany_SetonMessage(GUI_ONEOFMANY * , void * proc)
0788: FFFFFFFF 4DFFD344 ; 1E2: GUI_FEEDBACK * CreateFeedBack (int,...)
078C: FFFFFFFF F9FFD344 ; 1E3: void FeedBack_SetText(GUI_FEEDBACK*,int)
0790: FFFFFFFF 215DA244 ; 1E4: int GetBattaryState(const int * , BATT *)
0794: FFFFFFFF 0569D444 ; 1E5: void * get_DisplayGC (void)
0798: FFFFFFFF C104E944 ; 1E6: void GetGuiRect(void*,RECT*)
079C: FFFFFFFF D96ED444 ; 1E7: void get_GC_RECT(void*,RECT*)
07A0: FFFFFFFF ED71D444 ; 1E8: int get_GC_xx(void * GC)
07A4: FFFFFFFF E171D444 ; 1E9: void *set_GC_xx(void * GC, int)
07A8: FFFFFFFF 816ED444 ; 1EA: void GC_validate_RECT(void * GC , RECT*)
07AC: FFFFFFFF 9D8EE844 ; 1EB: void addGui2book(BOOK*,GUI*)
07B0: FFFFFFFF 093AE944 ; 1EC: void DrawRect(int x1, int y1,int x2 ,int y2,int pen_color,int brush_color)
07B4: FFFFFFFF 113EE944 ; 1ED: void DrawString(int StrID,int align,int x1,int y1,int x2,int y2,int unk,int unk1,int pen_color ,int brush_color)
07B8: FFFFFFFF 81C9EA44 ; 1EE: void addGui2XGuiList (void* xguilist , GUI*)
07BC: FFFFFFFF 4103E944 ; 1EF: void InvalidateRect(DISP_OBJ *,RECT*)
07C0: FFFFFFFF 51C5EA44 ; 1F0: int CreateObject(GUI*,void (*)(DISP_DESC *),void (*)(DISP_DESC *),BOOK *,int,int,int size_obj)
07C4: FFFFFFFF 6549E944 ; 1F1: int SetFont(int)
07C8: FFFFFFFF 3829184c ;81F2: DISP_OBJ ** StatusRow_p(void)
07CC: FFFFFFFF FD210645 ; 1F3: int root_list_get_session_count(void)
07D0: FFFFFFFF 11220645 ; 1F4: UI_APP_SESSION *root_list_get_session(int num_session)
07D4: FFFFFFFF 291B0645 ; 1F5: BOOK *SESSION_GetTopBook(UI_APP_SESSION *)
07D8: FFFFFFFF 7507D444 ; 1F6: int MainInput_getVisible(GUI *)
07DC: FFFFFFFF 8107D444 ; 1F7: int MainInput_strlen(GUI *)
07E0: FFFFFFFF 9507D444 ; 1F8: char * MainInput_getPNUM(GUI *)
07E4: FFFFFFFF A107D444 ; 1F9: int MainInput_isPlus(GUI *)
07EC: FFFFFFFF 515FBF44 ; 1FB: int wstrncmp(u16*,u16*,int)
07F0: FFFFFFFF 051EE944 ; 1FC: int DISP_OBJ_GetAbsoluteXPos(DISP_OBJ *)
07F4: FFFFFFFF 2D1EE944 ; 1FD: int DISP_OBJ_GetAbsoluteYPos(DISP_OBJ *)
07FC: FFFFFFFF 599B0645 ; 1FF: int GetThemeColor(int , int)
0800: FFFFFFFF 7D371645 ; 200: int REQUEST_SETTING_SILENCE_SET(const int * __zero,u16 profile,u16 value);
0804: FFFFFFFF 21371645 ; 201: int REQUEST_SETTING_SILENCE_GET(const int * __zero,u16 profile, char * silence_mode);
0808: FFFFFFFF A5B3DF44 ; 202: void VCALL_Init (void* vc);
080C: FFFFFFFF 5DF0DE44 ; 203: void VCALL_SetName (void * vc , u16 * name ,char name_len);
0810: FFFFFFFF B9F0DE44 ; 204: void VCALL_SetNameIcon (void * vc , u16 icon);
0814: FFFFFFFF 7DF0DE44 ; 205: void VCALL_SetNumber (void * vc , u16 * number , char num_len);
0818: FFFFFFFF A5F0DE44 ; 206: void VCALL_SetHZ1 (void * vc, int , u16 );
081C: FFFFFFFF B1F0DE44 ; 207: void VCALL_SetHZ2 (void * vc , u16 );
0820: FFFFFFFF 21E7DE44 ; 208: void MakeVoiceCall (int SessioID , void * vc ,int flag);
0824: FFFFFFFF 05B81445 ; 209: int isDirectory (u16 * path ,u16 * filename , int * error );
0828: FFFFFFFF 89CD0E45 ; 20A: void FileDelete (u16 * path ,u16 * filename , int * error );
082C: FFFFFFFF A9D9D344 ; 20B: void SetFocus (GUI * , int);
0830: FFFFFFFF 11A2FA44 ; 20C: int CreateSMSCont (int, void*);
0834: FFFFFFFF A9A6FA44 ; 20D: int FreeSMSCont (void*);
0838: FFFFFFFF 71A3FA44 ; 20E: int PrepareSMSCont (void*,u16*,u16*,int,int);
083C: FFFFFFFF 71A3FA44 ; 20F: int CteateNewMessage (int,void*,int);
0840: FFFFFFFF 28552444 ; 210: void * get_APP_DESC_TABLE(void);
0844: FFFFFFFF 9DD5D344 ; 211: C_INTERFACE *Window_GetComponentInterface(WINDOW*)
0848: FFFFFFFF 65DFDF4C ; 212: int AB_POSITIONNBR_GET(void * ab_name,char * ,u16 * ,void * ab_num);
084C: FFFFFFFF 11DCDF44 ; 213: int AB_NAME_ITEM2StrID(void * ab_name);
0850: FFFFFFFF 79DCDF44 ; 214: int AB_NUM_ITEM2StrID(void * ab_num_item);
0854: FFFFFFFF F9AF0A45 ; 215: int GetABRecNum(AB_GET_STRUCT *);
0858: FFFFFFFF E0962144 ;8216: AB_ITEM_DESC * get_AB_ITEMS_DESC()
085C: FFFFFFFF 61960B45 ; 217: GUI * SBY_GetMainInput(BOOK * StandBy);
0860: FFFFFFFF 5D960B45 ; 218: GUI * SBY_GetStatusIndication(BOOK * StandBy);
0864: FFFFFFFF 35070D45 ; 219: int REQUEST_PHONEBOOK_ACCESSSTATUS_TOTAL_GET(const int * __zero, int *)
0868: FFFFFFFF cc7d0c4c ;821A: int * PID_MMI(void);
;086C: FFFFFFFF ; 21B:
;0870: FFFFFFFF ; 21C:
0874: FFFFFFFF 5917E844 ; 21D: DISP_OBJ* DISPBASE_GetFocused(int display);
0878: FFFFFFFF F501E944 ; 21E: char DISP_OBJ_getVisible(DISP_OBJ*)
087C: FFFFFFFF 49620745 ; 21F: DISP_DESC* DISP_OBJ_GetDESC (DISP_OBJ*)
0880: FFFFFFFF 75F5E844 ; 220: void DISP_DESC_SetName (DISP_DESC* , const char * name)
0884: FFFFFFFF BD1CE944 ; 221: char* DISP_OBJ_GetName (DISP_OBJ *)
0888: FFFFFFFF 9DF5E844 ; 222: void DISP_DESC_SetSize (DISP_DESC* , u16 size)
0890: FFFFFFFF 3DC8EE44 ; 224: void DISP_DESC_SetOnCreate (DISP_DESC* , DISP_OBJ_ONCREATE_METHOD)
0894: FFFFFFFF 69F9E844 ; 225: DISP_OBJ_ONCREATE_METHOD DISP_OBJ_GetOnCreate (DISP_OBJ *)
0898: FFFFFFFF DDF5E844 ; 226: void DISP_DESC_SetOnClose (DISP_DESC* , DISP_OBJ_ONCLOSE_METHOD)
089C: FFFFFFFF 7DF9E844 ; 227: DISP_OBJ_ONCLOSE_METHOD DISP_OBJ_GetOnClose (DISP_OBJ *)
08A0: FFFFFFFF FDF5E844 ; 228: void DISP_DESC_SetOnRedraw (DISP_DESC* , DISP_OBJ_ONREDRAW_METHOD)
08A4: FFFFFFFF 91F9E844 ; 229: DISP_OBJ_ONREDRAW_METHOD DISP_OBJ_GetOnRedraw (DISP_OBJ *)
08A8: FFFFFFFF 3DF6E844 ; 22A: void DISP_DESC_SetOnKey (DISP_DESC* , DISP_BASE_ONKEY_METHO)
08AC: FFFFFFFF B9F9E844 ; 22B: DISP_OBJ_ONKEY_METHOD DISP_OBJ_GetOnKey (DISP_OBJ *)

0950: FFFFFFFF 69AC0E45 ; 254: void DestroyDirHandle(void *handle);
0954: FFFFFFFF 50CF2244 ;8255: DB_EXT *LastExtDB(void);
095C: FFFFFFFF 81E10645 ; 257: void MessageBox(int HeaderStrID,int MessageStrID,int IconID, int style /*1 or 2*/,int time,BOOK * unk);
