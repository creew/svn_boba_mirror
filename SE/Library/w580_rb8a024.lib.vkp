;W580 SW-R8BA024
;Библиотека функций
;v221207
;(c) Hussein , IronMaster
;

+45C3FC00
0440: 00000000 592AD444   ; 110:  void *memalloc(int zero, int size,int f1,int f2,const char *fname,int fline)
0444: 00000000 852AD444   ; 111:  void memfree(int zero, void * mem,const char * fname ,int fline)
0448: 00000000 2C002D44   ; 112:  void memset(void *mem,char chr,int size)
044C: 00000000 40062D44   ; 113:  int memcpy(void *dest,const void *source,int cnt)
0450: 00000000 756E5544   ; 114:  int sprintf(char *buf, char *str, ...)
0454: 00000000 3D745544   ; 115:  int snwprintf(u16* buffer, int size, const u16* fmt, ...)
0458: 00000000 9571E844   ; 116:  int _fopen(const unsigned short *filename, const char *mode)
045C: 00000000 6187E844   ; 117:  int fclose(int  file)
0460: 00000000 E989E844   ; 118:  int fread(int file , void *ptr, int size)
0464: 00000000 B58BE844   ; 119:  int fwrite(const void *ptr, int size, int n, int file)

;0468: 00000000    ; 11A:  int _wstat(short *path, void *statbuf)
;046C: 00000000    ; 11B:  int fputs(const char *s, int file)

0470: 00000000 297BE844   ; 11C:  int isFileExist(u16 * pach, u16 *fname , FSTAT * fstat_stuct)
0474: 00000000 4951E844   ; 11D:  void * AllocDirHandle(u16 * path)
0478: 00000000 0953E844   ; 11E:  void *GetFname(void *, void*)
047C: 00000000 0949EC44   ; 11F:  void * CreateDataBrowser(void)
0480: 00000000 CD4BEC44   ; 120:  void DataBrowser_SetStyle(void * db , int style)
0484: 00000000 FD4BEC44   ; 121:  void DataBrowser_SetHeaderText(void * db , int StrID)
0488: 00000000 E54BEC44   ; 122:  void DataBrowser_SetFolders(void * db , int * FolderList)
048C: 00000000 054CEC44   ; 123:  void DataBrowser_SetOKSoftKeyText(void * db , int StrID)
0490: 00000000 B111EC44   ; 124:  void DataBrowser_Show(void * db)
0494: 00000000 BD49EC44   ; 125:  void DataBrowser_XXX(void * db)
0498: 00000000 79A2E844   ; 126:  unsigned short * getFileExtention(unsigned short * fnane)
049C: 00000000 7555E844   ; 127:  int DataBrowser_isFileInListExt(unsigned short * ext_table,unsigned short * patch ,unsigned short * fname )
04A0: 00000000 ED9C2A45   ; 128:  void Timer_ReSet(u16 *timerID ,int time, void (*onTimer)(u16 * unk , void *), void*);
04A4: 00000000 B99C2A45   ; 129:  u16 Timer_Set(int time, void (*onTimer)(u16 * unk , void *), void*);
04A8: 00000000 459D2A45   ; 12A:  void FreeTimer(void *timer)

04AC: 00000000 FDCC2A45   ; 12B:  int CreateBook(void * mem, void * onClose, const PAGE_DESC * bp, const char * name, int __0xFFFFFFFF,int __0)
04B0: 00000000 25CE2A45   ; 12C:  void BookObj_KillBook(void *Book)
04B4: 00000000 79CB2A45   ; 12D:  void BookObj_GotoPage(BOOK * book, const PAGE_DESC * page)
04B8: 00000000 E1CB2A45   ; 12E:  void BookObj_ReturnPage(BOOK * ,int)
04BC: 00000000 19D32A45   ; 12F:  void FreeBook ( void *book)
04C0: 00000000 BDB32A45   ; 130:  void * FindBook(int (* proc)(BOOK * ))

04C4: 00000000 F9022C45   ; 131:  BOOK * Find_StandbyBook(void)

04C8: 00000000 A9CF2A45   ; 132:  void BookObj_SetFocus(void *,int focus)
04CC: 00000000 8D3C3645   ; 133:  void GuiObject_SetTitleText(void * gui , int StrID)
04D0: 00000000 5D373645   ; 134:  void ShowWindow (void * gui)
04D4: 00000000 0DCD3145   ; 135:  void SetCursorToItem ( void *obj , int item)
04D8: 00000000 AD373645   ; 136:  void GUI_SetStyle(GUI *,int style); 
04DC: 00000000 5DD83145   ; 137:  int GUIonMessage_GetCreatedItemIndex( void *msg)
04E0: 00000000 69D83145   ; 138:  char SetMenuItemText0 ( void *msg , int StrID)
04E4: 00000000 99D83145   ; 139:  char SetMenuItemText1 ( void *msg , int StrID)
04E8: 00000000 79D83145   ; 13A:  char SetMenuItemText2 ( void *msg , int StrID)
04EC: 00000000 89D83145   ; 13B:  char SetMenuItemText3 ( void *msg , int StrID)
04F0: 00000000 E1D83145   ; 13C:  void SetListObjectItemIcon ( void *msg , int align , int iconID)

04F4: 00000000 01863545   ; 13D:  void SetHeaderText( void *obj , int StrID)
04F8: 00000000 21CD3145   ; 13E:  int GetFocusetListObjectItem( void *obj)
04FC: 00000000 71CD3145   ; 13F:  void SetMenuItemStyle( void *obj , int style)

0500: 00000000 00000000   ; 140:  void putchar( void *xx , int x, int y, int _zero, int zero1 , short wchar)
0504: 00000000 5D323745   ; 141:  void SetGuiItemText(void *gui,int item,int StrID)
0508: 00000000 5D323745   ; 142:  void StatusIndication_SetItemText(void *gui,int item,int StrID)
050C: 00000000 B11F2C45   ; 143:  void StatusIndication_ShowNotes(int StrID)
0510: 00000000 DD4D2F45   ; 144:  void * CreateStringInput(int,...)
0514: 00000000 C1EC3145   ; 145:  void * CreateRadioButtons(void * gui)
0518: 00000000 89EE3145   ; 146:  void SetRadioButtonsCount(void * gui , int count)
051C: 00000000 A5EE3145   ; 147:  void SetRadioButtonsChecked(void * gui , int checked)
0520: 00000000 D9EE3145   ; 148:  void SetRadioButtonsText(void * gui , int * textTable , int rbCount)
0524: 00000000 B5EE3145   ; 149:  int GetSelectedRadioButton(void * rb)
0528: 00000000 E11E2C45   ; 14A:  void StatusIndication_Item8_SetText(int StrID)
052C: 00000000 C5FF3745   ; 14B:  void AddMSGHook(void * menu,short msg,void (*proc)(BOOK *,void*))
0530: 00000000 3D003845   ; 14C:  void AddCommand(void * menu,int cmd , int StrID)
0534: 00000000 F9003845   ; 14D:  void SoftKey_SetEnable(void *gui,int msg,int ena)
0538: 00000000 B1003845   ; 14E:  void SoftKey_AddErrorStr(void *gui,int msg,int StrID)
053C: 00000000 89FF3745   ; 14F:  void SoftKey_RemoveItem(void *gui,u16 action)

0540: 00000000 8D003845   ; 150:  void SoftKey_SetVisible(void *gui,int action,int visible)
0544: 00000000 FD023845   ; 151:  void SoftKey_SuppressDefaultAction(void *gui,int action)
0548: 00000000 497B5544   ; 152:  u16* wstrcpy(u16 * dest, u16 * source)
054C: 00000000 F57B5544   ; 153:  short* wstrncpy(short * dest, short * source, int maxlen)
0550: 00000000 ED7A5544   ; 154:  u16* wstrcat(u16 * wstr, u16 * subwstr)
0554: 00000000 957B5544   ; 155:  short* wstrncat(short * wstr, short * subwstr , int maxlen)
0558: 00000000 217B5544   ; 156:  int wstrcmp(unsigned short * wstr1, unsigned short * wstr2)
055C: 00000000 1175E444   ; 157:  int wstrlen(u16 * wstr)

0560: 00000000 D987E444   ; 158:  u16 * str2wstr(u16 * wstr,char * str)
0564: 00000000 21725544   ; 159:  int strcmp(char * str1, char * str2)
0568: 00000000 7D725544   ; 15A:  int strlen(char *str)
056C: 00000000 3176E444   ; 15B:  char * wstr2strn (char * str , u16 * wstr, int maxlen)
0570: 00000000 455A3445   ; 15C:  int int2strID (int num)
0574: 00000000 F95C3445   ; 15D:  int Str2ID(const void * wstr , int  flag , int len)
0578: 00000000 00000000   ; 15E:  void StrID2Str(int StrID,char * str,int maxlen)
057C: 00000000 7D603445   ; 15F:  void TextID2wstr(int StrID,u16 * str,int maxlen)

0580: 00000000 5D5F3445   ; 160:  int TextGetLength(int StrID)
0584: 00000000 C15E3445   ; 161:  void TextFree(int StrID)
0588: 00000000 00000000   ; 162:  int AB_DEFAULTNBR_GET(int rec_num, void * mem_0x30, int * unk)
058C: 00000000 A5B5DE44   ; 163:  int AB_READSTRING(void * mem_0x30,int rec_num, int rec_item_num)
0590: 00000000 71B6DE44   ; 164:  int AB_READPHONENBR(void * mem_0x30,int rec_num, int rec_item_num)
0594: 00000000 29B7DE44   ; 165:  int AB_GETNBROFITEMS(int get_from,int unk_0)
0598: 00000000 69533445   ; 166:  int PNUM_len(void *pnum)
059C: 00000000 4D292345   ; 167:  void PNUM2str(char *str,void *pnum,int len, int max_len)
;05A0: 00000000 ; 168:  void * ListElement_GetByNum(LIST *lst,int num_element)--------------------------------------------------
05A0: 00000000 5D353645   ; 168:  DISP_BASE * GUIObj_GetDISPObj (void * gui);
05A4: 00000000 C1401B45   ; 169:  LIST *List_New(void)
05A8: 00000000 FD401B45   ; 16A:  void List_Free(LIST *lst)
05AC: 00000000 71421B45   ; 16B:  void ListElement_AddtoTop(LIST *lst,void *newElement)
05B0: 00000000 5DCFE344   ; 16C:  int Gif2ID(u16 IMAGEHANDLE,u16 * path, u16 * fname,u16 * ID)
05B4: 00000000 350AE444   ; 16D:  int REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE(const int * __zero,u16 * IMAGEHANDLE,u16 * unk)
05B8: 00000000 E58FD444   ; 16E:  void REQUEST_DATEANDTIME_GET(const int * __zero , DATETIME * dt)
05BC: 00000000 00000000   ; 16F:  void IndicationDevice_Backlight_FadeToLevel(int unk_zero ,int bl_level)

05C0: 00000000 ADD4F744   ; 170:  int GetFreeBytesOnHeap(void)
05C4: 00000000 D1CF2A45   ; 171:  void Hide(void * udata)
05C8: 00000000 E1CF2A45   ; 172:  void Show(void * udata)
05CC: 00000000 75042C45   ; 173:  void StartAPP (u16 * appname)
;05D0: 00000000 00000000   ; 174:  void CreateEvent(int event) -----------------------------------------------------
05D0: 00000000 FD9DD544   ; void ListMenu_SetOnMessages (GUI_LIST * , void * onMessage);
05D4: 00000000 45B42745   ; 175:  char * manifest_GetParam(char *buf,char *param_name,int unk)
05D8: 00000000 5D8DE844   ; 176:  int lseek(int file,int offset,int mode)
05DC: 00000000 00000000   ; 177:  int get_VBUFFER(void)
05E0: 00000000 E1032E45   ; 178:  viod SetLampLevel (int level)
05E4: 00000000 FD411B45   ; 179:  void * ListElement_Remove(LIST *lst,int index)
05E8: 00000000 990C2C44   ; 17A:  int GetCurrentPID(void)
05EC: 00000000 31421B45   ; 17B:  int ListElement_Prt2NumElement(LIST *lst,void *ptr)

05F0: 00000000 D0943044   ; 17C:  void *alloc(int size,int signo)
05F4: 00000000 EC943044   ; 17D:  void * recive(void *sigsel);
05F8: 00000000 DC943044   ; 17E:  void send(void **sig,int PID);
05FC: 00000000 2C953044   ; 17F:  int sender(void **sig);
0600: 00000000 FC943044   ; 180:  void free_buf(void **sig);
0604: 00000000 C8953044   ; 181:  int create_process(int proc_type,char *name,void (*entrypoint)(void),int stack_size,int priority,int timeslice,int pid_block,void *redir_table,int vector,int user);
0608: 00000000 E8973044   ; 182:  void start (int pid)
060C: 00000000 98963044   ; 183:  int get_ptype(int pid);
0610: 00000000 E4953044   ; 184:  int current_process (void);
0614: 00000000 1C953044   ; 185:  void delay(int timeout);


0680: 00000000 49725544   ; 1A0:  char* strcpy(char * dest, char * source);
0684: 00000000 F94FFF44   ; 1A1:  void *CreateMessage(int size,int ev,char *name);
0688: 00000000 4D50FF44   ; 1A2:  void SendMessage(void **signal,int PID);
068C: 00000000 D550FF44   ; 1A3:  void * WaitMessage(void *SIGSEL);
0690: 00000000 E950FF44   ; 1A4:  iint FreeMessage(void **Mess);
0694: 00000000 41B9FC44   ; 1A5:  void SendDispatchMessage(int id, int unk_zero, int size,void *mess);
0698: 00000000 C9A22A45   ; 1A6:  char * UIEventName (int event);
069C: 00000000 6C56AF45   ;81A7:  void *  get_APP_DESC_TABLE(void);

06A0: 00000000 85B72A45   ; 1A8:  void  UI_Event(int event);
06A4: 00000000 95B72A45   ; 1A9:  void  UI_Event_wData(int event,void *message,void (*mfree)(void*));
06A8: 00000000 DDB72A45   ; 1AA:  void  UI_Event_toSID(int event,int SessionID);
06AC: 00000000 F1B72A45   ; 1AB:  void  UI_Event_toSIDwData(void *event,int SedionID,void *message,void (*mfree)(void*));
06B0: 00000000 91441B45   ; 1AC:  int ListElement_Find(LIST *lst,void *element, int (*cmp_proc)(void *,void *));

06B4: 00000000 95431B45   ; 1AD:  int ListElement_GetByIndex(LIST * , int index);
06B8: 00000000 497C5544   ; 1AE:  u16* wstrrchr(u16*wstr, u16 wchar);
06BC: 00000000 EDCA2A45   ; 1AF:  void BookObj_CallSubroutine(BOOK * , void * SubProcDesc);
06C0: 00000000 79421B45   ; 1B0:  void ListElement_Add(LIST *lst,void *newElement);
06C4: 00000000 C1682344   ; 1B1: printf
06C8: 00000000 00000000   ; 1B2:  int PlayFile(u16 * path, u16 * fname);

;06CC: 00000000 ; 1B3: int GetChargeBatteryInPercent(BOOK *standby , int *level);
;06D0: 00000000 ; 1B4: int REQUEST_PROFILE_GETACTIVEPROFILE(const int *__zero , int *level);
;06D4: 00000000 ; 1B5: void REQUEST_PROFILE_SETACTIVEPROFILE(const int *__zero , int NUMprof);
;06D8: 00000000 ; 1B6: void SetBrightnessOfScreen(int br);
;06DC: 00000000 ; 1B7: int  isKeylocked(void);
;06E0: 00000000 ; 81B8: IS_NEEDED_BOOK isMediaPlayerVideoBook(void);

06E0: 00000000 00000000   ;81B8:  IS_NEEDED_BOOK isMediaPlayerVideoBook(void);
06E4: 00000000 00000000   ; 1B9: void VideoOnWholeScreen(BOOK * MediaPlayer_Video_Book);  // вместо  get_APP_DESC_TABLE
06FC: 00000000 00000000   ; 1BF: int Time2ID(TIME *, char TimeFormat,int);

0700: 00000000 05CB3145   ; 1C0: GUI_LIST* CreateListObject(BOOK * , void * unk);
0704: 00000000 35CD3145   ; 1C1: void SetNumOfMenuItem(void * , int  item_count);
0708: 00000000 A4201820   ; 81C2: void * ROOT_APP(void);
070C: 00000000 29003845   ; 1C3: void SoftKey_AddHelpStr(void *gui,int msg,int StrID);
0710: 00000000 1D013845   ; 1C4: void SoftKey_SetItemAsSubItem(void *gui,int item,int subitem);
0714: 00000000 2D2F2C45   ; 1C5: int REQUEST_SYSTEM_SHUTDOWN(void);
0718: 00000000 3D2F2C45   ; 1C6: int REQUEST_SYSTEM_RESTART(void);
071C: 00000000 61003845   ; 1C7: void SoftKeys_SetText(void *gui,int msg,int StrID,int StrID1); 

0720: 00000000 659A3845   ; 1C8: int isRightNowBook(BOOK *);
0724: 00000000 65F82B45   ; 1C9: int isVolumeControllerBook(BOOK *);

0728: 00000000 C5453645   ; 1CA: GUI_TABMENUBAR * CreateTabMenuBar(BOOK *);
072C: 00000000 99463645   ; 1CB: void TabMenuBar_SetTabCount(GUI_TABMENUBAR * , int count);
0730: 00000000 4D473645   ; 1CC: void TabMenuBar_AssignGuiObj(GUI_TABMENUBAR * , int tab , GUI*);
0734: 00000000 89473645   ; 1CD: void TabMenuBar_SetTabIcon(GUI_TABMENUBAR *,int tab, u16 icon , int for_state);
0738: 00000000 ED343645   ; 1CE: void  GUI_Free(void*);  
073C: 00000000 69383645   ; 1CF: void GUI_SetIcon(GUI* , int icon);
0740: 00000000 81562F45   ; 1D0: int StringInput_GetStringAndLen (GUI*,u16**,u16*);
;0744: 00000000    ; 1D1: 
;0748: 00000000    ; 1D2: 
074C: 00000000 00000000   ; 1D3: int GetVolumeSize(char * volume, VOLUMESIZE *);
0750: 00000000 01E73145   ; 1D4: GUI_NOFMANY * CreateNOfMany(BOOK *);
0754: 00000000 41E93145   ; 1D5: void NOfMany_SetTexts(GUI_NOFMANY * , int * StrIDtable, int items_count);
0758: 00000000 C5E83145   ; 1D6: void NOfMany_SetChecked(GUI_NOFMANY * , u16 * checked_table, int items_count);
075C: 00000000 8DE83145   ; 1D7: void NOfMany_SetCursor(GUI_NOFMANY * , int item);
0760: 00000000 E9E83145   ; 1D8: int NOfMany_GetCheckedCount(GUI_NOFMANY *);
0764: 00000000 D9E83145   ; 1D9: int NOfMany_GetChecked(GUI_NOFMANY * , u16 * buffer );
0768: 00000000 39E93145   ; 1DA: void NOfMany_SetonMessage(GUI_NOFMANY * , void * proc );
;076C: 00000000    ; 1DB: 
;0770: 00000000    ; 1DC: 
;0774: 00000000    ; 1DD: 
;0778: 00000000    ; 1DE: 
;077C: 00000000    ; 1DF: 
0780: 00000000 6DEE3145   ; 1E0: void OneOfMany_SetFocused(GUI_ONEOFMANY * , int item);
0784: 00000000 D1EE3145   ; 1E1: void OneOfMany_SetonMessage(GUI_ONEOFMANY * , void * proc);

0788: 00000000 31B42B45   ; 1E2: GUI_FEEDBACK * CreateFeedBack (int,...);
078C: 00000000 FDB42B45   ; 1E3: void  FeedBack_SetText(GUI_FEEDBACK*,int);
0790: 00000000 00000000   ; 1E4: int GetBattaryState(const int * , BATT *);
0794: 00000000 D90F3645   ; 1E5: void * get_DisplayGC (void);
0798: 00000000 959A3545   ; 1E6: void GetGuiRect(void*,RECT*);
079C: 00000000 B1163645   ; 1E7: void get_GC_RECT(void*,RECT*);
07A0: 00000000 B5193645   ; 1E8: char *get_GC_xx(void * GC);
07A4: 00000000 A9193645   ; 1E9: void *set_GC_xx(void * GC, int);
07A8: 00000000 61163645   ; 1EA: void GC_validate_RECT(void * GC , RECT*);
07AC: 00000000 5DD02A45   ; 1EB: void addGui2book(BOOK*,GUI*)
07B0: 00000000 C5C23545   ; 1EC: void DrawRect(int x1, int y1,int x2 ,int y2,int pen_color,int brush_color);
07B4: 00000000 C5C53545   ; 1ED: void DrawString(int StrID,int align,int x1,int y1,int x2,int y2,int unk,int unk1,int pen_color ,int brush_color);
07B8: 00000000 39D52A45   ; 1EE: void addGui2XGuiList (void* xguilist , GUI*);
07BC: 00000000 01993545   ; 1EF: void InvalidateRect(DISP_BASE *,RECT*);

07C0: 00000000 11343645   ; 1F0: int CreateObject(GUI*,void (*)(DISP_DESC *),void (*)(DISP_DESC *),BOOK *,int,int);
07C4: 00000000 21D03545   ; 1F1: void SetFont(int);
07C8: 00000000 7C6E1820   ; 81F2: StatusRow_p;
07CC: 00000000 BDB42A45   ; 1F3: int root_list_get_session_count(void);
07D0: 00000000 C9B42A45   ; 1F4: UI_APP_SESSION *root_list_get_session(int num_session);
07D4: 00000000 ADAD2A45   ; 1F5: BOOK *SESSION_GetTopBook(UI_APP_SESSION *);

07D8: 00000000 8DB82B45   ; 1F6: int MainInput_getVisible(GUI *);
07DC: 00000000 A5B82B45   ; 1F7: int MainInput_strlen(GUI *);
07E0: 00000000 B1B82B45   ; 1F8: char * MainInput_getPNUM(GUI *);
07E4: 00000000 BDB82B45   ; 1F9: int MainInput_isPlus(GUI *);
07E8: 00000000 D9D32A45   ; 1FA: int BOOK_GetSessionID(BOOK * );
07EC: 00000000 C17B5544   ; 1FB: int wstrncmp(u16*,u16*,int);
07F0: 00000000 85AA3545   ; 1FC: int DISP_BASE_GetAbsoluteXPos(DISP_BASE *);
07F4: 00000000 B9AA3545   ; 1FD: int DISP_BASE_GetAbsoluteYPos(DISP_BASE *);
07F8: 00000000 B19D3545   ; 1FE: WINDOW * DISP_BASE_GetWindow(DISP_BASE *);
07FC: 00000000 252D3845   ; 1FF: int GetThemeColor(int , int);

0800: 00000000 ED3D2E45   ; 200: int REQUEST_SETTING_SILENCE_SET(const int * __zero,u16 profile,u16 value);
0804: 00000000 953D2E45   ; 201: int REQUEST_SETTING_SILENCE_GET(const int * __zero,u16 profile, char * silence_mode);
0808: 00000000 4DE6DD44   ; 202: void VCALL_Init (void* vc);                                    
080C: 00000000 45E7DD44   ; 203: void VCALL_SetName (void * vc , u16 * name ,char name_len);    
0810: 00000000 A5E7DD44   ; 204: void VCALL_SetNameIcon (void * vc , u16 icon);                 
0814: 00000000 65E7DD44   ; 205: void VCALL_SetNumber (void * vc , u16 * number , char num_len);
0818: 00000000 89E7DD44   ; 206: void VCALL_SetHZ1 (void * vc, int , u16 );                     
081C: 00000000 95E7DD44   ; 207: void VCALL_SetHZ2 (void * vc , u16 );                          
0820: 00000000 25E2DD44   ; 208: void MakeVoiceCall (int SessioID , void * vc ,int flag);       
0824: 00000000 00000000   ; 209: int isDirectory (u16 * path ,u16 * filename , int * error );
0828: 00000000 6D7CE844   ; 20A: void FileDelete (u16 * path ,u16 * filename , int * error );
082C: 00000000 09373645   ; 20B: void SetFocus (GUI * , int);

0830: 00000000 49790245   ; 20C: int CreateSMSCont (int, void*);
0834: 00000000 E97F0245   ; 20D: int FreeSMSCont (void*);
0838: 00000000 217B0245   ; 20E: int PrepareSMSCont (void*,u16*,u16*,int,int);
083C: 00000000 497F0245   ; 20F: int CteateNewMessage (int,void*,int);

0840: 00000000 6C56AF45   ; 8210: get_APP_DESC_TABLE(void);
0844: 00000000 0D073645   ; 211: C_INTERFACE *Window_GetComponentInterface (WINDOW*)
0848: 00000000 01B9DE44   ; 212: int AB_POSITIONNBR_GET(void * ab_name,char * ,u16 * ,void * ab_num);
084C: 00000000 29B8DE44   ; 213: int AB_NAME_ITEM2StrID(void * ab_name,char * ,u16 * ,void * ab_num); 
0850: 00000000 71B8DE44   ; 214: int AB_NUM_ITEM2StrID(void * ab_num_item);
0854: 00000000 D7B0A544   ; 215: int GetABRecNum(AB_GET_STRUCT *);
0858: 00000000 A0B1AA45   ;8216: AB_ITEM_DESC * get_AB_ITEMS_DESC()
085C: 00000000 3D94A644   ; 217: GUI * SBY_GetMainInput(BOOK * StandBy);
0860: 00000000 3994A644   ; 218: GUI * SBY_GetStatusIndication(BOOK * StandBy); 
0864: 00000000 5D6FD644   ; 219: int REQUEST_PHONEBOOK_ACCESSSTATUS_TOTAL_GET(const int * __zero, int *);
0868: 00000000 28D00920   ; 821A: int *MMI_PID(void);
;086C: 00000000    ; 21B: 
;0870: 00000000    ; 21C: 
0874: 00000000 E1913545   ; 21D: DISP_BASE* DISPBASE_GetFocused(int display);
0878: 00000000 95973545   ; 21E: char DISP_BASE_getVisible(DISP_BASE*);
087C: 00000000 CD2F8F44   ; 21F: DISP_DESC* DISP_OBJ_GetDESC (DISP_OBJ*);

0880: 00000000 E9523545   ; 220: void DISP_DESC_SetName (DISP_DESC *  , char * name);
0884: 00000000 45A83545   ; 221: char* DISP_BASE_GetName (DISP_BASE *);
0888: 00000000 ED523545   ; 222: void DISP_DESC_SetSize (DISP_DESC* , u16 size);
;088C: 00000000    ; 223: u16 DISP_DESC_GetSize (DISP_BASE *);
0890: 00000000 F1523545   ; 224: void DISP_DESC_SetOnCreate (DISP_DESC* , DISP_BASE_ONCREATE_METHOD);
0894: 00000000 79533545   ; 225: DISP_BASE_ONCREATE_METHOD DISP_BASE_GetOnCreate (DISP_BASE *);
0898: 00000000 F5523545   ; 226: void DISP_DESC_SetOnClose (DISP_DESC* , DISP_BASE_ONCLOSE_METHOD);
089C: 00000000 95533545   ; 227: DISP_BASE_ONCLOSE_METHOD DISP_BASE_GetOnClose (DISP_BASE *);
08A0: 00000000 F9523545   ; 228: void DISP_DESC_SetOnRedraw (DISP_DESC* , DISP_BASE_ONREDRAW_METHOD);
08A4: 00000000 B1533545   ; 229: DISP_BASE_ONREDRAW_METHOD DISP_BASE_GetOnRedraw (DISP_BASE *);
08A8: 00000000 01533545   ; 22A: void DISP_DESC_SetOnKey (DISP_DESC* , DISP_BASE_ONKEY_METHOD);
08AC: 00000000 E9533545   ; 22B: DISP_BASE_ONKEY_METHOD DISP_BASE_GetOnKey (DISP_BASE *);
;08B0: 00000000    ; 22C: void DISP_DESC_SetMethod03 (DISP_DESC* ,void (*)(void*));
;08B4: 00000000    ; 22D: DISP_BASE_METHOD DISP_BASE_GetMethod03 (DISP_BASE *);
;08B8: 00000000    ; 22E: void DISP_DESC_SetMethod04 (DISP_DESC* ,void (*)(void*));
;08BC: 00000000    ; 22F: DISP_BASE_METHOD DISP_BASE_GetMethod04 (DISP_BASE *);

;08C0: 00000000    ; 230: void DISP_DESC_SetMethod05 (DISP_DESC* ,void (*)(void*));
;08C4: 00000000    ; 231: DISP_BASE_METHOD DISP_BASE_GetMethod05 (DISP_BASE *);
08C8: 00000000 05533545   ; 232: void DISP_DESC_SetMethod06 (DISP_DESC* ,void (*)(void*));
08CC: 00000000 05543545   ; 233: DISP_BASE_METHOD DISP_BASE_GetMethod06 (DISP_BASE *);
;08D0: 00000000    ; 234: void DISP_DESC_SetMethod07 (DISP_DESC* ,void (*)(void*));
;08D4: 00000000    ; 235: DISP_BASE_METHOD DISP_BASE_GetMethod07 (DISP_BASE *);
08D8: 00000000 0D533545   ; 236: void DISP_DESC_SetMethod08 (DISP_DESC* ,void (*)(void*));
08DC: 00000000 3D543545   ; 237: DISP_BASE_METHOD DISP_BASE_GetMethod08 (DISP_BASE *);
;08E0: 00000000    ; 238: void DISP_DESC_SetMethod09 (DISP_DESC* ,void (*)(void*));
;08E4: 00000000    ; 239: DISP_BASE_METHOD DISP_BASE_GetMethod09 (DISP_BASE *);
;08E8: 00000000    ; 23A: void DISP_DESC_SetMethod0A (DISP_DESC* ,void (*)(void*));
;08EC: 00000000    ; 23B: DISP_BASE_METHOD DISP_BASE_GetMethod0A (DISP_BASE *);
;08F0: 00000000    ; 23C: void DISP_DESC_SetMethod0B (DISP_DESC* ,void (*)(void*));
;08F4: 00000000    ; 23D: DISP_BASE_METHOD DISP_BASE_GetMethod0B (DISP_BASE *);
;08F8: 00000000    ; 23E: void DISP_DESC_SetMethod0C (DISP_DESC* ,void (*)(void*));
;08FC: 00000000    ; 23F: DISP_BASE_METHOD DISP_BASE_GetMethod0C (DISP_BASE *);
;14.01.2008
;0900: 00000000    ; 240: void JavaSession_Manager (int cmd);
;0904: 00000000    ; 241: int JavaSession_GetName(void);
0908: 00000000 295E3445   ; 242: int TextCopyId(int);
090C: 00000000 79D32A45   ; 243: UI_APP_SESSION *Book_GetSession(BOOK*);
0910: 00000000 F9D83145   ; 244: void List2lineSetAsSubitem (void* msg,int unk,int n_sub_items);
0914: 00000000 71D93145   ; 245: void List2lineSubitemAddText(void* msg,int StrID);
0918: 00000000 65D93145   ; 246: int GUIonMessage_GetCreatedSubItemParrentIndex(void * msg);








;locale=Russian_Russia.1251