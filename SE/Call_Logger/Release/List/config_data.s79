//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   27/Jan/2009  11:16:25 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\Documents and Settings\Mehanoshin\Рабочий        /
//                       стол\123\Embedded Workbench 4.0                     /
//                       Evaluation\Project\Call_Logger\config_data.c        /
//    Command line    =  "C:\Documents and Settings\Mehanoshin\Рабочий       /
//                       стол\123\Embedded Workbench 4.0                     /
//                       Evaluation\Project\Call_Logger\config_data.c" -D    /
//                       NDEBUG -lC "C:\Documents and                        /
//                       Settings\Mehanoshin\Рабочий стол\123\Embedded       /
//                       Workbench 4.0 Evaluation\Project\Call_Logger\Releas /
//                       e\List\" -lA "C:\Documents and                      /
//                       Settings\Mehanoshin\Рабочий стол\123\Embedded       /
//                       Workbench 4.0 Evaluation\Project\Call_Logger\Releas /
//                       e\List\" -o "C:\Documents and                       /
//                       Settings\Mehanoshin\Рабочий стол\123\Embedded       /
//                       Workbench 4.0 Evaluation\Project\Call_Logger\Releas /
//                       e\Obj\" -s9 --no_unroll --no_inline --cpu_mode arm  /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --fpu None --eec++ --dlib_config     /
//                       "C:\Documents and Settings\Mehanoshin\Рабочий       /
//                       стол\123\Embedded Workbench 4.0                     /
//                       Evaluation\ARM\LIB\dl5tpainl8n.h" --segment         /
//                       code=CONFIG --segment data=CONFIG -I "C:\Documents  /
//                       and Settings\Mehanoshin\Рабочий стол\123\Embedded   /
//                       Workbench 4.0 Evaluation\ARM\INC\"                  /
//    List file       =  C:\Documents and Settings\Mehanoshin\Рабочий        /
//                       стол\123\Embedded Workbench 4.0                     /
//                       Evaluation\Project\Call_Logger\Release\List\config_ /
//                       data.s79                                            /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME config_data

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBLIC Hol1
        PUBLIC Hol2
        PUBLIC TimeDay
        PUBLIC TimeNight
        PUBLIC TrafCost
        PUBLIC TrafCostDay
        PUBLIC TrafCostHol
        PUBLIC TrafCostNight
        PUBLIC TrafDiv
        PUBLIC TrafKb
        PUBLIC TrafRound
        PUBLIC sort_order
        PUBLIC strMoney
// C:\Documents and Settings\Mehanoshin\Рабочий стол\123\Embedded Workbench 4.0 Evaluation\Project\Call_Logger\config_data.c
//    1 #include "..\\include\cfg_items.h"
//    2 #include "config_data.h"
//    3 
//    4 #pragma diag_suppress=Pe177
//    5 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 11
        DC8 "Divide Traf"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//    6 __root const CFG_HDR cfghdr0={CFG_CHECKBOX,"Divide Traf",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//    7 __root const int TrafDiv=1;
TrafDiv:
        DATA
        DC32 1
//    8 
//    9 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Measure Unit"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 2
//   10 __root const CFG_HDR cfghdr1={CFG_CBOX,"Measure Unit",0,2};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   11 __root const int TrafKb=0;
TrafKb:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "Bytes"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Kbytes"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
//   12 __root const CFG_CBOX_ITEM cfgcbox1[2]={"Bytes","Kbytes"};
//   13 
//   14 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Sort Order"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 2
//   15 __root const CFG_HDR cfghdr12={CFG_CBOX,"Sort Order",0,2};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   16 __root const int sort_order=0;
sort_order:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "FIFO"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "LIFO"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   17 __root const CFG_CBOX_ITEM cfgcbox2[2]={"FIFO","LIFO"};
//   18 
//   19 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Traf Cost"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 1000000
//   20 __root const CFG_HDR cfghdr2={CFG_UINT,"Traf Cost",0,1000000};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   21 __root const unsigned int TrafCost=0;
TrafCost:
        DATA
        DC32 0
//   22 
//   23 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Traf Round"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 1024
//   24 __root const CFG_HDR cfghdr3={CFG_UINT,"Traf Round",0,1024};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   25 __root const unsigned int TrafRound=1;
TrafRound:
        DATA
        DC32 1
//   26 
//   27 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Day Time Start"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 24
//   28 __root const CFG_HDR cfghdr4={CFG_UINT,"Day Time Start",0,24};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   29 __root const unsigned int TimeDay=0;
TimeDay:
        DATA
        DC32 0
//   30 
//   31 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Night Time Start"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 24
//   32 __root const CFG_HDR cfghdr5={CFG_UINT,"Night Time Start",0,24};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   33 __root const unsigned int TimeNight=0;
TimeNight:
        DATA
        DC32 0
//   34 
//   35 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Day Traf Cost"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 1000000
//   36 __root const CFG_HDR cfghdr6={CFG_UINT,"Day Traf Cost",0,1000000};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   37 __root const unsigned int TrafCostDay=0;
TrafCostDay:
        DATA
        DC32 0
//   38 
//   39 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Night Traf Cost"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 1000000
//   40 __root const CFG_HDR cfghdr7={CFG_UINT,"Night Traf Cost",0,1000000};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   41 __root const unsigned int TrafCostNight=0;
TrafCostNight:
        DATA
        DC32 0
//   42 
//   43 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Holiday #1"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 7
//   44 __root const CFG_HDR cfghdr8={CFG_UINT,"Holiday #1",0,7};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   45 __root const unsigned int Hol1=0;
Hol1:
        DATA
        DC32 0
//   46 
//   47 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Holiday #2"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 7
//   48 __root const CFG_HDR cfghdr9={CFG_UINT,"Holiday #2",0,7};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   49 __root const unsigned int Hol2=0;
Hol2:
        DATA
        DC32 0
//   50 
//   51 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 1
        DC8 "Holiday Traf Cost"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 1000000
//   52 __root const CFG_HDR cfghdr10={CFG_UINT,"Holiday Traf Cost",0,1000000};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   53 __root const unsigned int TrafCostHol=0;
TrafCostHol:
        DATA
        DC32 0
//   54 
//   55 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 4
        DC8 "Money Unit"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 15
//   56 __root const CFG_HDR cfghdr11={CFG_STR_WIN1251,"Money Unit",0,15};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   57 __root const char strMoney[16]="rub";
strMoney:
        DATA
        DC8 "rub"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        END
//   58 
// 
// 764 bytes in segment CONFIG_C
// 
// 764 bytes of CONST memory
//
//Errors: none
//Warnings: none
