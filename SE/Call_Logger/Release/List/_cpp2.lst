##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    27/Jan/2009  11:16:25 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\Documents and Settings\Mehanoshin\Рабочий         #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\C++\_cpp2.cpp                     #
#    Command line    =  "C:\Documents and Settings\Mehanoshin\Рабочий        #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\C++\_cpp2.cpp" -D NDEBUG -lC      #
#                       "C:\Documents and Settings\Mehanoshin\Рабочий        #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\Call_Logger\Release\List\" -lA    #
#                       "C:\Documents and Settings\Mehanoshin\Рабочий        #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\Call_Logger\Release\List\" -o     #
#                       "C:\Documents and Settings\Mehanoshin\Рабочий        #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\Call_Logger\Release\Obj\" -s9     #
#                       --no_unroll --no_inline --cpu_mode arm --endian      #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --eec++ --dlib_config "C:\Documents    #
#                       and Settings\Mehanoshin\Рабочий стол\123\Embedded    #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "C:\Documents and Settings\Mehanoshin\Рабочий        #
#                       стол\123\Embedded Workbench 4.0 Evaluation\ARM\INC\" #
#    List file       =  C:\Documents and Settings\Mehanoshin\Рабочий         #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\Call_Logger\Release\List\_cpp2.ls #
#                       t                                                    #
#    Object file     =  C:\Documents and Settings\Mehanoshin\Рабочий         #
#                       стол\123\Embedded Workbench 4.0                      #
#                       Evaluation\Project\Call_Logger\Release\Obj\_cpp2.r79 #
#                                                                            #
#                                                                            #
##############################################################################

C:\Documents and Settings\Mehanoshin\Рабочий стол\123\Embedded Workbench 4.0 Evaluation\Project\C++\_cpp2.cpp
      1          #include "..\include\Lib_Clara.h"
      2          
      3          

   \                                 In segment CODE, align 4, keep-with-next
      4          void* operator new(size_t sz){return malloc(sz);};
   \                     `??operator new`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   030100EF           SWI      +259
   \   00000008   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
      5          void* operator new[](size_t sz){return malloc(sz);};
   \                     `??operator new[]`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   030100EF           SWI      +259
   \   00000008   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
      6          void operator delete(void * p){mfree(p);};
   \                     `??operator delete`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   040100EF           SWI      +260
   \   00000008   0080BDE8           POP      {PC}             ;; return
      7          

   Maximum stack usage in bytes:

     Function                CSTACK
     --------                ------
     operator delete(void *)     4
     operator new(size_t)        4
     operator new[](size_t)      4


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     operator new(size_t)      12
     operator new[](size_t)    12
     operator delete(void *)   12
      Others                   12

 
 48 bytes in segment CODE
 
 36 bytes of CODE memory (+ 12 bytes shared)

Errors: none
Warnings: none
