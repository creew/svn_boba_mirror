###############################################################################
#                                                                             #
#     IAR Systems ARM Assembler V4.40A/W32 28/Jun/2006  11:37:41              #
#     Copyright 1999-2006 IAR Systems. All rights reserved.                   #
#                                                                             #
#           Source file   =  E:\ARM\FSWI\main.asm                             #
#           List file     =  E:\ARM\FSWI\Release\List\main.lst                #
#           Object file   =  E:\ARM\FSWI\Release\Obj\main.r79                 #
#           Command line  =  E:\ARM\FSWI\main.asm -OE:\ARM\FSWI\Release\Obj\  #
#                            -s+ -M<> -w+ -LE:\ARM\FSWI\Release\List\ -t8     #
#                            --cpu ARM926EJ-S --fpu None                      #
#                            -ID:\IARARM\ARM\INC\                             #
#                                                                             #
###############################################################################

    1    00000000              ;SWI dispatcher v1.0 (C)2006 by Rst7/CBSIE
    2    00000000              ;CX75sw23
    3    00000000              ;xcl:
    4    00000000              ;-carm
    5    00000000              ;-Z(CODE)CODE=A0FD8000-A0FD80FF
    6    00000000              ;-Z(CODE)PATCH1=A0092BE4-A0092BE7      
                                //00000134+A0092AB0-00000137+A0092AB0
    7    00000000              ;-Z(CODE)PATCH2=A0092BA4-A0092BAB      
                                //000000F4+A0092AB0-000000FB+A0092AB0
    8    00000000              ;-Z(CODE)LIBR=A0FD4000-A0FD7FFF
    9    00000000              ;
   10    00000000              ;S75sw40
   11    00000000              ;xcl:
   12    00000000              ;-carm
   13    00000000              ;-Z(CODE)CODE=A0078000-A00780FF
   14    00000000              ;-Z(CODE)PATCH1=A13A1374-A13A1377      
                                //000002A4+A13A10D0
   15    00000000              ;-Z(CODE)PATCH2=A13A1288-A13A128B      
                                //000001B8+A13A10D0
   16    00000000              ;-Z(CODE)LIBR=A0074000-A0077FFF
   17    00000000              ;
   18    00000000              ;       NAME    main
   19    00000000              
   20    00000000                      RSEG    PATCH1:CODE
   21    00000000                      CODE32
   22    00000000              
   23    00000000 ........             LDR     PC,main_jumper
   24    00000004              
   25    00000000                      RSEG    PATCH2:DATA(2)
   26    00000000              
   27    00000000              main_jumper:
   28    00000000 ........             DC32    main
   29    00000004              
   30    00000000                      RSEG    CODE:CODE
   31    00000000                      CODE32
   32    00000000              nullsub:
   33    00000000 1EFF2FE1             BX      LR
   34    00000004              main:
   35    00000004 00109DE5             LDR     R1,[SP,#0]              ; Берем
                                                   CPSR
   36    00000008 200011E3             TST     R1, #0x20               ;
                                                    Проверяем на тумбу
   37    0000000C 122F8F02             ADREQ   R2,arm_jumper           ; Берем
                                                   адрес джампера
   38    00000010 0400000A             BEQ     arm_mode
   39    00000014 C70050E3             CMP     R0,#199                 ;
                                                   Служебный SWI для длинной
                                                   библиотеки
   40    00000018 B000DE01             LDREQH  R0,[LR]                 ;
                                                   Зацепляем второе слово
                                                   (длинный номер)
   41    0000001C 03E08E02             ADDEQ   LR,LR,#3                ;
                                                   Устанавливаем мл. бит адреса
                                                   возврата и пропускаем
                                                   DW
   42    00000020 01E08E12             ADDNE   LR,LR,#1                ; Если
                                                   короткий, то достаточно
                                                   только бит0
   43    00000024 35208FE2             ADR     R2,thumb_jumper         ; Берем
                                                   адрес джампера
   44    00000028              arm_mode
   45    00000028 34109FE5             LDR     R1,=Library             ;
                                                   Указатель на таблицу
                                                   адресов
   46    0000002C 803CC0E3             BIC     R3,R0,#0x8000
   47    00000030 400D53E3             CMP     R3,#4096
   48    00000034 0500008A             BHI     exit
   49    00000038 800C10E3             TST     R0,#0x8000              ; А не
                                                   адрес нам надо получить?
   50    0000003C 00402D09             STMEQFD SP!,{LR}                ;
                                                   Копируем адрес возврата из
                                                   LR_svc только если вызов
                                                   функции
   51    00000040 0040FD08             LDMEQFD SP!,{LR}^               ; в
                                                   LR_usr, он будет использован
                                                   вызываемой функцией
   52    00000044 03C191E7             LDR     R12,[R1,R3,LSL#2]       ; Берем
                                                    адрес функции
   53    00000048 04C08D15             STRNE   R12,[SP,#4]             ; пишем
                                                    адрес в R0(стек)
   54    0000004C 14208D05             STREQ   R2,[SP,#0x14]           ; Пишем
                                                   адрес джампера для возврата
                                                   в стеке (PC)
   55    00000050              exit:
   56    00000050 0100BDE8             LDMFD   SP!,{R0}
   57    00000054 00F069E1             MSR     SPSR_cf,R0
   58    00000058 0F80FDE8             LDMFD   SP!,{R0-R3,PC}^
   59    0000005C              arm_jumper:
   60    0000005C 1CFF2FE1             BX      R12
   61    00000060                      CODE16
   62    00000060              thumb_jumper:
   63    00000060 6047                 BX      R12
   64    00000062 0000                 CODE32
   65    00000064              ;
   66    00000064              ; Собственно библиотека
   67    00000064              ;
   68    00000064                      RSEG    LIBR:DATA(2)
   68.1  00000064                       TABLE
   68.2  00000064 ........             Reference on line 45 
   68.3  00000000                      RSEG (including table)
   68    00000000                      RSEG    LIBR:DATA(2)
   69    00000000              Library:
   70    00000000 ........             DC32    nullsub
   71    00000004 ........             DC32    nullsub
   72    00000008 ........             DC32    nullsub
   73    0000000C ........             DC32    nullsub
   74    00000010 ........             DC32    nullsub
   75    00000014              ; И т.д.
   76    00000014                      END     ;main
##############################
#          CRC:6E13          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 132         #
##############################



