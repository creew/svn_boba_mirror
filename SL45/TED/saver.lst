C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   1
saver

 LOC CODE        LINE   SOURCELINE

                     1   ; C166/ST10 C compiler v7.5 r2            SN00123412-435 (c) 2001 TASKING, Inc.
                     2   ; options: -e -Id:\c166\include -xmifp -DCPUTYPE=0x167 -FSC -Ob -znocustack
                     3   ;          -zautobitastruct-4 -zautobita-0 -T256 -s -zvolatile_union -u
                     4   ;          -AcdFiklmpstuVx -OAcdFghjkLnoprSUx -Ml
                     5   $EXTEND
                     6   $NOMOD166
                     7   $STDNAMES(reg.def)
                     8   $SEGMENTED
                     9   $CASE
                    10   $MODEL(LARGE)
                    11           NAME    SAVER_C
                    12           ASSUME  DPP3:SYSTEM
                    13   ; saver.c     1 #include "sl45.h"
                    14   ; saver.c     2 
                    15   ; saver.c     3 #define STKSZ (16384)
                    16   ; saver.c     4 #define STKSZ50 (8192)
                    17   ; saver.c     5 
                    18   ; saver.c     6 #pragma class fb=CFAR_SAV
                    19   ; saver.c     7 unsigned char far ibuf[STKSZ50];
                    20   SAVER_1_FB      SECTION DATA WORD PUBLIC 'CFAR_SAV'
0000                21   SAVER_1_FB_ENTRY        LABEL   BYTE
0000                22   _ibuf   LABEL   BYTE
0000                23           DS      8192
                    24           PUBLIC  _ibuf
                    25   ; saver.c     8 unsigned char far obuf[STKSZ50];
2000                26   _obuf   LABEL   BYTE
2000                27           DS      8192
                    28           PUBLIC  _obuf
                    29   ; saver.c     9 #pragma default_attributes
                    30   ; saver.c    10 
                    31   ; saver.c    11 extern int far u_disk; //Дисковый указатель верхнего стека (в блоках по STKSZ50)
                    32   ; saver.c    12 extern int far d_disk; //Дисковый указатель нижнего стека (в блоках по STKSZ50)
                    33   ; saver.c    13 extern unsigned int far usp; //Указатель на верхний стек
                    34   ; saver.c    14 extern unsigned int far dsp; //Указатель на нижний стек
                    35   ; saver.c    15 extern unsigned char far dbat[256]; //Таблица распределения блоков нижнего стека во временн
                         ом файле
                    36   ; saver.c    16 extern unsigned char far ubat[256]; //Таблица распределения блоков верхнего стека во времен
                         ном файлe
                    37   ; saver.c    17 extern char far stkfile[];
                    38   ; saver.c    18 extern char far filename[];
                    39   ; saver.c    19 extern unsigned char far dstk[];
                    40   ; saver.c    20 extern unsigned char far ustk[];
                    41   ; saver.c    21 
                    42   ; saver.c    22 extern unsigned char far disk_access;
                    43   ; saver.c    23 
                    44   ; saver.c    24 extern unsigned int bl_ds(unsigned int pos);
                    45   ; saver.c    25 
                    46   ; saver.c    26 extern unsigned int far terminated; //Признак закрытия диалога
                    47   ; saver.c    27 extern int far dia_id;
                    48   ; saver.c    28 extern volatile unsigned char far draw_mode;
                    49   ; saver.c    29 
                    50   ; saver.c    30 #define flush_obuf(FILEH,P) {if (P>=STKSZ50) {FileWrite(FILEH,obuf,P); P=0;}}
                    51   ; saver.c    31 
                    52   ; saver.c    32 void savetext(void)
                    53   ; saver.c    33 {
C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   2
saver

 LOC CODE        LINE   SOURCELINE

                    54           PUBLIC  _savetext
                    55   SAVER_1_FB      ENDS
                    56   
                    57   SAVER_2_PR      SECTION CODE WORD PUBLIC 'CPROGRAM'
                    58   _savetext       PROC    FAR
0000 8890           59           MOV     [-R0],R9
0002 8880           60           MOV     [-R0],R8
0004 8870           61           MOV     [-R0],R7
0006 8860           62           MOV     [-R0],R6
0008 2804           63           SUB     R0,#04h
                    64   ; Locals:
                    65   ;     ul = offset 0
                    66   ; 
                    67   ; Statics:
                    68   ; 
                    69   ; CSEs:
                    70   ;     i = R8
                    71   ;     p = R9
                    72   ;     c = RL1
                    73   ;     f = R6
                    74   ;     sf = R7
                    75   ;     &ibuf + p = R12R13
                    76   ;     &ibuf + p = R12R13
                    77   ; 
                    78   ; saver.c    34  int sf;
                    79   ; saver.c    35  int f;
                    80   ; saver.c    36  unsigned int p;
                    81   ; saver.c    37  long ul;
                    82   ; saver.c    38  int i;
                    83   ; saver.c    39  char c;
                    84   ; saver.c    40 
                    85   ; saver.c    41  f=FileOpen((STR)filename,_O_RDWR+_O_BINARY+_O_CREAT+_O_TRUNC,_S_IREAD); //Создаем выходной
                          файл
000A E6FC0000  R    86           MOV     R12,#POF _filename
000E E6FD0000  R    87           MOV     R13,#PAG _filename
0012 E6FE0283       88           MOV     R14,#08302h
0016 E6FF0001       89           MOV     R15,#0100h
001A DA000000  R    90           CALLS   SEG _FileOpen,_FileOpen
001E F064           91           MOV     R6,R4
                    92   ; saver.c    42  sf=FileOpen((STR)stkfile,_O_RDONLY+_O_BINARY,0); //Файл верхнего стека
0020 E6FC0000  R    93           MOV     R12,#POF _stkfile
0024 E6FD0000  R    94           MOV     R13,#PAG _stkfile
0028 E6FE0080       95           MOV     R14,#08000h
002C E00F           96           MOV     R15,#00h
002E DA000000  R    97           CALLS   SEG _FileOpen,_FileOpen
0032 F074           98           MOV     R7,R4
                    99   ; saver.c    43 
                   100   ; saver.c    44  i=0;
0034 E008          101           MOV     R8,#00h
                   102   ; saver.c    45  while(i<=u_disk)
0036 0D3B          103           JMPR    cc_UC,_6
0038               104   _3:
                   105   ; saver.c    46  {
                   106   ; saver.c    47   //Пишем верхний стек непосредственно
                   107   ; saver.c    48   p=ubat[i++];
C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   3
saver

 LOC CODE        LINE   SOURCELINE

0038 F0C8          108           MOV     R12,R8
003A 0881          109           ADD     R8,#01h
003C D7400000  R   110           EXTP    #PAG _ubat,#01h
0040 F42C0000 1R   111           MOVB    RL1,[R12+#POF _ubat]
0044 C029          112           MOVBZ   R9,RL1
                   113   ; saver.c    49   FileSeek(sf,_mulu32(STKSZ50,p),0,&ul);
0046 F0C0          114           MOV     R12,R0
0048 66FCFF3F      115           AND     R12,#03FFFh
004C F2FD02FE      116           MOV     R13,DPP1
0050 88D0          117           MOV     [-R0],R13
0052 88C0          118           MOV     [-R0],R12
0054 E6FD0020      119           MOV     R13,#02000h
0058 1BD9          120           MULU    R13,R9
005A F2FE0CFE      121           MOV     R14,MDH
005E F2FD0EFE      122           MOV     R13,MDL
0062 F0C7          123           MOV     R12,R7
0064 E00F          124           MOV     R15,#00h
0066 DA000000  R   125           CALLS   SEG _FileSeek,_FileSeek
006A 0804          126           ADD     R0,#04h
                   127   ; saver.c    50   FileRead(sf,ibuf,STKSZ50);
006C F0C7          128           MOV     R12,R7
006E E6FD0000  R   129           MOV     R13,#POF _ibuf
0072 E6FE0000  R   130           MOV     R14,#PAG _ibuf
0076 E6FF0020      131           MOV     R15,#02000h
007A DA000000  R   132           CALLS   SEG _FileRead,_FileRead
                   133   ; saver.c    51   p=0;
007E E009          134           MOV     R9,#00h
                   135   ; saver.c    52   while(p!=STKSZ50)
0080               136   _4:
                   137   ; saver.c    53   {
                   138   ; saver.c    54    if (!ibuf[p]) ibuf[p]=0x0D;
0080 E6FC0000  R   139           MOV     R12,#POF _ibuf
0084 E6FD0000  R   140           MOV     R13,#PAG _ibuf
0088 00C9          141           ADD     R12,R9
008A DC4D          142           EXTP    R13,#01h
008C A92C     1    143           MOVB    RL1,[R12]
008E 3D03          144           JMPR    cc_NZ,_5
0090 E1D2          145           MOVB    RL1,#0Dh
0092 DC4D          146           EXTP    R13,#01h
0094 B92C     1    147           MOVB    [R12],RL1
0096               148   _5:
0096 86F9FF1F      149           CMPI1   R9,#01FFFh
009A 3DF2          150           JMPR    cc_NE,_4
                   151   ; saver.c    55    p++;
                   152   ; saver.c    56   }
                   153   ; saver.c    57   FileWrite(f,ibuf,STKSZ50);
009C F0C6          154           MOV     R12,R6
009E E6FD0000  R   155           MOV     R13,#POF _ibuf
00A2 E6FE0000  R   156           MOV     R14,#PAG _ibuf
00A6 E6FF0020      157           MOV     R15,#02000h
00AA DA000000  R   158           CALLS   SEG _FileWrite,_FileWrite
00AE               159   _6:
00AE D7400000  R   160           EXTP    #PAG _u_disk,#01h
00B2 42F80000 1R   161           CMP     R8,POF _u_disk
00B6 BDC0          162           JMPR    cc_SLE,_3
C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   4
saver

 LOC CODE        LINE   SOURCELINE

                   163   ; saver.c    58  }
                   164   ; saver.c    59  //Пишем верхний стек из ОЗУ
                   165   ; saver.c    60  p=0;
00B8 E009          166           MOV     R9,#00h
                   167   ; saver.c    61  i=0;
00BA E008          168           MOV     R8,#00h
                   169   ; saver.c    62  while(p!=usp)
00BC 0D17          170           JMPR    cc_UC,_10
00BE               171   _7:
                   172   ; saver.c    63  {
                   173   ; saver.c    64   c=ustk[p];
00BE D7400000  R   174           EXTP    #PAG _ustk,#01h
00C2 F4290000 1R   175           MOVB    RL1,[R9+#POF _ustk]
                   176   ; saver.c    65   if (!c) c=0x0D;
00C6 3D01          177           JMPR    cc_NZ,_8
00C8 E1D2          178           MOVB    RL1,#0Dh
00CA               179   _8:
                   180   ; saver.c    66   obuf[i]=c;
00CA D7400000  R   181           EXTP    #PAG _obuf,#01h
00CE E4280000 1R   182           MOVB    [R8+#POF _obuf],RL1
                   183   ; saver.c    67   i++;
                   184   ; saver.c    68   flush_obuf(f,i);
00D2 86F8FF1F      185           CMPI1   R8,#01FFFh
00D6 CD09          186           JMPR    cc_SLT,_9
00D8 F0C6          187           MOV     R12,R6
00DA E6FD0000  R   188           MOV     R13,#POF _obuf
00DE E6FE0000  R   189           MOV     R14,#PAG _obuf
00E2 F0F8          190           MOV     R15,R8
00E4 DA000000  R   191           CALLS   SEG _FileWrite,_FileWrite
00E8 E008          192           MOV     R8,#00h
00EA               193   _9:
                   194   ; saver.c    69   p++;
00EA 0891          195           ADD     R9,#01h
00EC               196   _10:
00EC D7400000  R   197           EXTP    #PAG _usp,#01h
00F0 42F90000 1R   198           CMP     R9,POF _usp
00F4 3DE4          199           JMPR    cc_NE,_7
                   200   ; saver.c    70  }
                   201   ; saver.c    71  p=dsp;
00F6 D7400000  R   202           EXTP    #PAG _dsp,#01h
00FA F2F90000 1R   203           MOV     R9,POF _dsp
                   204   ; saver.c    72  while(p!=STKSZ)
00FE 0D17          205           JMPR    cc_UC,_14
0100               206   _11:
                   207   ; saver.c    73  {
                   208   ; saver.c    74   //Пишем нижний стек из ОЗУ
                   209   ; saver.c    75   c=dstk[p];
0100 D7400000  R   210           EXTP    #PAG _dstk,#01h
0104 F4290000 1R   211           MOVB    RL1,[R9+#POF _dstk]
                   212   ; saver.c    76   if (!c) c=0x0D;
0108 3D01          213           JMPR    cc_NZ,_12
010A E1D2          214           MOVB    RL1,#0Dh
010C               215   _12:
                   216   ; saver.c    77   obuf[i]=c;
010C D7400000  R   217           EXTP    #PAG _obuf,#01h
C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   5
saver

 LOC CODE        LINE   SOURCELINE

0110 E4280000 1R   218           MOVB    [R8+#POF _obuf],RL1
                   219   ; saver.c    78   i++;
                   220   ; saver.c    79   flush_obuf(f,i);
0114 86F8FF1F      221           CMPI1   R8,#01FFFh
0118 CD09          222           JMPR    cc_SLT,_13
011A F0C6          223           MOV     R12,R6
011C E6FD0000  R   224           MOV     R13,#POF _obuf
0120 E6FE0000  R   225           MOV     R14,#PAG _obuf
0124 F0F8          226           MOV     R15,R8
0126 DA000000  R   227           CALLS   SEG _FileWrite,_FileWrite
012A E008          228           MOV     R8,#00h
012C               229   _13:
                   230   ; saver.c    80   p++;
012C 0891          231           ADD     R9,#01h
012E               232   _14:
012E 46F90040      233           CMP     R9,#04000h
0132 3DE6          234           JMPR    cc_NE,_11
                   235   ; saver.c    81  }
                   236   ; saver.c    82  FileWrite(f,obuf,i); //Недобиток
0134 F0C6          237           MOV     R12,R6
0136 E6FD0000  R   238           MOV     R13,#POF _obuf
013A E6FE0000  R   239           MOV     R14,#PAG _obuf
013E F0F8          240           MOV     R15,R8
0140 DA000000  R   241           CALLS   SEG _FileWrite,_FileWrite
                   242   ; saver.c    83  i=d_disk;
0144 D7400000  R   243           EXTP    #PAG _d_disk,#01h
0148 F2F80000 1R   244           MOV     R8,POF _d_disk
                   245   ; saver.c    84  while(i>=0)
014C 0D3B          246           JMPR    cc_UC,_18
014E               247   _15:
                   248   ; saver.c    85  {
                   249   ; saver.c    86   //Пишем нижний стек
                   250   ; saver.c    87   p=dbat[i--];
014E F0C8          251           MOV     R12,R8
0150 2881          252           SUB     R8,#01h
0152 D7400000  R   253           EXTP    #PAG _dbat,#01h
0156 F42C0000 1R   254           MOVB    RL1,[R12+#POF _dbat]
015A C029          255           MOVBZ   R9,RL1
                   256   ; saver.c    88   FileSeek(sf,_mulu32(STKSZ50,p),0,&ul);
015C F0C0          257           MOV     R12,R0
015E 66FCFF3F      258           AND     R12,#03FFFh
0162 F2FD02FE      259           MOV     R13,DPP1
0166 88D0          260           MOV     [-R0],R13
0168 88C0          261           MOV     [-R0],R12
016A E6FD0020      262           MOV     R13,#02000h
016E 1BD9          263           MULU    R13,R9
0170 F2FE0CFE      264           MOV     R14,MDH
0174 F2FD0EFE      265           MOV     R13,MDL
0178 F0C7          266           MOV     R12,R7
017A E00F          267           MOV     R15,#00h
017C DA000000  R   268           CALLS   SEG _FileSeek,_FileSeek
0180 0804          269           ADD     R0,#04h
                   270   ; saver.c    89   FileRead(sf,ibuf,STKSZ50);
0182 F0C7          271           MOV     R12,R7
0184 E6FD0000  R   272           MOV     R13,#POF _ibuf
C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   6
saver

 LOC CODE        LINE   SOURCELINE

0188 E6FE0000  R   273           MOV     R14,#PAG _ibuf
018C E6FF0020      274           MOV     R15,#02000h
0190 DA000000  R   275           CALLS   SEG _FileRead,_FileRead
                   276   ; saver.c    90   p=0;
0194 E009          277           MOV     R9,#00h
                   278   ; saver.c    91   while(p!=STKSZ50)
0196               279   _16:
                   280   ; saver.c    92   {
                   281   ; saver.c    93    if (!ibuf[p]) ibuf[p]=0x0D;
0196 E6FC0000  R   282           MOV     R12,#POF _ibuf
019A E6FD0000  R   283           MOV     R13,#PAG _ibuf
019E 00C9          284           ADD     R12,R9
01A0 DC4D          285           EXTP    R13,#01h
01A2 A92C     1    286           MOVB    RL1,[R12]
01A4 3D03          287           JMPR    cc_NZ,_17
01A6 E1D2          288           MOVB    RL1,#0Dh
01A8 DC4D          289           EXTP    R13,#01h
01AA B92C     1    290           MOVB    [R12],RL1
01AC               291   _17:
01AC 86F9FF1F      292           CMPI1   R9,#01FFFh
01B0 3DF2          293           JMPR    cc_NE,_16
                   294   ; saver.c    94    p++;
                   295   ; saver.c    95   }
                   296   ; saver.c    96   FileWrite(f,ibuf,STKSZ50);
01B2 F0C6          297           MOV     R12,R6
01B4 E6FD0000  R   298           MOV     R13,#POF _ibuf
01B8 E6FE0000  R   299           MOV     R14,#PAG _ibuf
01BC E6FF0020      300           MOV     R15,#02000h
01C0 DA000000  R   301           CALLS   SEG _FileWrite,_FileWrite
01C4               302   _18:
01C4 4880          303           CMP     R8,#00h
01C6 DDC3          304           JMPR    cc_SGE,_15
                   305   ; saver.c    97  }
                   306   ; saver.c    98  FileClose(sf); //Более ничего интересного в верхнем стеке
01C8 F0C7          307           MOV     R12,R7
01CA DA000000  R   308           CALLS   SEG _FileClose,_FileClose
                   309   ; saver.c    99  FileClose(f);
01CE F0C6          310           MOV     R12,R6
01D0 DA000000  R   311           CALLS   SEG _FileClose,_FileClose
                   312   ; saver.c   100  disk_access=0;
01D4 D7400000  R   313           EXTP    #PAG _disk_access,#01h
01D8 F78E0000 1R   314           MOVB    POF _disk_access,ZEROS
                   315   ; saver.c   101  draw_mode=1; //Перерисовываем
01DC E11C          316           MOVB    RL6,#01h
01DE D7400000  R   317           EXTP    #PAG _draw_mode,#01h
01E2 F7FC0000 1R   318           MOVB    POF _draw_mode,RL6
                   319   ; saver.c   102  if (!terminated) SendMessage((void far *)0x3B5E8,0xF8,dia_id);
01E6 D7400000  R   320           EXTP    #PAG _terminated,#01h
01EA F2F80000 1R   321           MOV     R8,POF _terminated
01EE 3D0B          322           JMPR    cc_NZ,_19
01F0 E6FCE835      323           MOV     R12,#035E8h
01F4 E0ED          324           MOV     R13,#0Eh
01F6 E6FEF800      325           MOV     R14,#0F8h
01FA D7400000  R   326           EXTP    #PAG _dia_id,#01h
01FE F2FF0000 1R   327           MOV     R15,POF _dia_id
C166/ST10 assembler v7.5 r2 SN00123412-223 (c) 2001 TASKING, Inc.                       Date: Apr  6 2006  Time: 11:55:47  Page:   7
saver

 LOC CODE        LINE   SOURCELINE

0202 DA000000  R   328           CALLS   SEG _SendMessage,_SendMessage
0206               329   _19:
                   330   ; saver.c   103 }
0206 0804          331           ADD     R0,#04h
0208 9860          332           MOV     R6,[R0+]
020A 9870          333           MOV     R7,[R0+]
020C 9880          334           MOV     R8,[R0+]
020E 9890          335           MOV     R9,[R0+]
0210 DB00          336           RETS
                   337   _savetext       ENDP
                   338   ; saver.c   104 
                   339   SAVER_2_PR      ENDS
                   340   
                   341           EXTERN  _draw_mode:BYTE
                   342           EXTERN  _d_disk:WORD
                   343           EXTERN  _filename:BYTE
                   344           EXTERN  _dsp:WORD
                   345           EXTERN  _terminated:WORD
                   346           EXTERN  _dia_id:WORD
                   347           EXTERN  _FileClose:FAR
                   348           EXTERN  _stkfile:BYTE
                   349           EXTERN  _usp:WORD
                   350           EXTERN  _FileSeek:FAR
                   351           EXTERN  _FileWrite:FAR
                   352           EXTERN  _SendMessage:FAR
                   353           EXTERN  _FileRead:FAR
                   354           EXTERN  _disk_access:BYTE
                   355           EXTERN  _dstk:BYTE
                   356           EXTERN  _ubat:BYTE
                   357           EXTERN  _dbat:BYTE
                   358           EXTERN  _u_disk:WORD
                   359           EXTERN  _ustk:BYTE
                   360           EXTERN  _FileOpen:FAR
                   361           REGDEF  R0-R15
                   362           END

total errors: 0, warnings: 0

