; C166/ST10 C compiler v7.5 r2            SN00123412-435 (c) 2001 TASKING, Inc.
; options: -e -Id:\c166\include -xmifp -DCPUTYPE=0x167 -FSC -Ob -znocustack
;          -zautobitastruct-4 -zautobita-0 -T256 -s -zvolatile_union -u
;          -AcdFiklmpstuVx -OAcdFghjkLnoprSUx -Ml
$EXTEND
$NOMOD166
$STDNAMES(reg.def)
$SEGMENTED
$CASE
$MODEL(LARGE)
	NAME	SAVER_C
	ASSUME	DPP3:SYSTEM
; saver.c     1	#include "sl45.h"
; saver.c     2	
; saver.c     3	#define STKSZ (16384)
; saver.c     4	#define STKSZ50 (8192)
; saver.c     5	
; saver.c     6	#pragma class fb=CFAR_SAV
; saver.c     7	unsigned char far ibuf[STKSZ50];
SAVER_1_FB	SECTION	DATA WORD PUBLIC 'CFAR_SAV'
SAVER_1_FB_ENTRY	LABEL	BYTE
_ibuf	LABEL	BYTE
	DS	8192
	PUBLIC	_ibuf
; saver.c     8	unsigned char far obuf[STKSZ50];
_obuf	LABEL	BYTE
	DS	8192
	PUBLIC	_obuf
; saver.c     9	#pragma default_attributes
; saver.c    10	
; saver.c    11	extern int far u_disk; //Дисковый указатель верхнего стека (в блоках по STKSZ50)
; saver.c    12	extern int far d_disk; //Дисковый указатель нижнего стека (в блоках по STKSZ50)
; saver.c    13	extern unsigned int far usp; //Указатель на верхний стек
; saver.c    14	extern unsigned int far dsp; //Указатель на нижний стек
; saver.c    15	extern unsigned char far dbat[256]; //Таблица распределения блоков нижнего стека во временном файле
; saver.c    16	extern unsigned char far ubat[256]; //Таблица распределения блоков верхнего стека во временном файлe
; saver.c    17	extern char far stkfile[];
; saver.c    18	extern char far filename[];
; saver.c    19	extern unsigned char far dstk[];
; saver.c    20	extern unsigned char far ustk[];
; saver.c    21	
; saver.c    22	extern unsigned char far disk_access;
; saver.c    23	
; saver.c    24	extern unsigned int bl_ds(unsigned int pos);
; saver.c    25	
; saver.c    26	extern unsigned int far terminated; //Признак закрытия диалога
; saver.c    27	extern int far dia_id;
; saver.c    28	extern volatile unsigned char far draw_mode;
; saver.c    29	
; saver.c    30	#define flush_obuf(FILEH,P) {if (P>=STKSZ50) {FileWrite(FILEH,obuf,P); P=0;}}
; saver.c    31	
; saver.c    32	void savetext(void)
; saver.c    33	{
	PUBLIC	_savetext
SAVER_1_FB	ENDS

SAVER_2_PR	SECTION	CODE WORD PUBLIC 'CPROGRAM'
_savetext	PROC	FAR
	MOV	[-R0],R9
	MOV	[-R0],R8
	MOV	[-R0],R7
	MOV	[-R0],R6
	SUB	R0,#04h
; Locals:
;     ul = offset 0
; 
; Statics:
; 
; CSEs:
;     i = R8
;     p = R9
;     c = RL1
;     f = R6
;     sf = R7
;     &ibuf + p = R12R13
;     &ibuf + p = R12R13
; 
; saver.c    34	 int sf;
; saver.c    35	 int f;
; saver.c    36	 unsigned int p;
; saver.c    37	 long ul;
; saver.c    38	 int i;
; saver.c    39	 char c;
; saver.c    40	
; saver.c    41	 f=FileOpen((STR)filename,_O_RDWR+_O_BINARY+_O_CREAT+_O_TRUNC,_S_IREAD); //Создаем выходной файл
	MOV	R12,#POF _filename
	MOV	R13,#PAG _filename
	MOV	R14,#08302h
	MOV	R15,#0100h
	CALLS	SEG _FileOpen,_FileOpen
	MOV	R6,R4
; saver.c    42	 sf=FileOpen((STR)stkfile,_O_RDONLY+_O_BINARY,0); //Файл верхнего стека
	MOV	R12,#POF _stkfile
	MOV	R13,#PAG _stkfile
	MOV	R14,#08000h
	MOV	R15,#00h
	CALLS	SEG _FileOpen,_FileOpen
	MOV	R7,R4
; saver.c    43	
; saver.c    44	 i=0;
	MOV	R8,#00h
; saver.c    45	 while(i<=u_disk)
	JMPR	cc_UC,_6
_3:
; saver.c    46	 {
; saver.c    47	  //Пишем верхний стек непосредственно
; saver.c    48	  p=ubat[i++];
	MOV	R12,R8
	ADD	R8,#01h
	EXTP	#PAG _ubat,#01h
	MOVB	RL1,[R12+#POF _ubat]
	MOVBZ	R9,RL1
; saver.c    49	  FileSeek(sf,_mulu32(STKSZ50,p),0,&ul);
	MOV	R12,R0
	AND	R12,#03FFFh
	MOV	R13,DPP1
	MOV	[-R0],R13
	MOV	[-R0],R12
	MOV	R13,#02000h
	MULU	R13,R9
	MOV	R14,MDH
	MOV	R13,MDL
	MOV	R12,R7
	MOV	R15,#00h
	CALLS	SEG _FileSeek,_FileSeek
	ADD	R0,#04h
; saver.c    50	  FileRead(sf,ibuf,STKSZ50);
	MOV	R12,R7
	MOV	R13,#POF _ibuf
	MOV	R14,#PAG _ibuf
	MOV	R15,#02000h
	CALLS	SEG _FileRead,_FileRead
; saver.c    51	  p=0;
	MOV	R9,#00h
; saver.c    52	  while(p!=STKSZ50)
_4:
; saver.c    53	  {
; saver.c    54	   if (!ibuf[p]) ibuf[p]=0x0D;
	MOV	R12,#POF _ibuf
	MOV	R13,#PAG _ibuf
	ADD	R12,R9
	EXTP	R13,#01h
	MOVB	RL1,[R12]
	JMPR	cc_NZ,_5
	MOVB	RL1,#0Dh
	EXTP	R13,#01h
	MOVB	[R12],RL1
_5:
	CMPI1	R9,#01FFFh
	JMPR	cc_NE,_4
; saver.c    55	   p++;
; saver.c    56	  }
; saver.c    57	  FileWrite(f,ibuf,STKSZ50);
	MOV	R12,R6
	MOV	R13,#POF _ibuf
	MOV	R14,#PAG _ibuf
	MOV	R15,#02000h
	CALLS	SEG _FileWrite,_FileWrite
_6:
	EXTP	#PAG _u_disk,#01h
	CMP	R8,POF _u_disk
	JMPR	cc_SLE,_3
; saver.c    58	 }
; saver.c    59	 //Пишем верхний стек из ОЗУ
; saver.c    60	 p=0;
	MOV	R9,#00h
; saver.c    61	 i=0;
	MOV	R8,#00h
; saver.c    62	 while(p!=usp)
	JMPR	cc_UC,_10
_7:
; saver.c    63	 {
; saver.c    64	  c=ustk[p];
	EXTP	#PAG _ustk,#01h
	MOVB	RL1,[R9+#POF _ustk]
; saver.c    65	  if (!c) c=0x0D;
	JMPR	cc_NZ,_8
	MOVB	RL1,#0Dh
_8:
; saver.c    66	  obuf[i]=c;
	EXTP	#PAG _obuf,#01h
	MOVB	[R8+#POF _obuf],RL1
; saver.c    67	  i++;
; saver.c    68	  flush_obuf(f,i);
	CMPI1	R8,#01FFFh
	JMPR	cc_SLT,_9
	MOV	R12,R6
	MOV	R13,#POF _obuf
	MOV	R14,#PAG _obuf
	MOV	R15,R8
	CALLS	SEG _FileWrite,_FileWrite
	MOV	R8,#00h
_9:
; saver.c    69	  p++;
	ADD	R9,#01h
_10:
	EXTP	#PAG _usp,#01h
	CMP	R9,POF _usp
	JMPR	cc_NE,_7
; saver.c    70	 }
; saver.c    71	 p=dsp;
	EXTP	#PAG _dsp,#01h
	MOV	R9,POF _dsp
; saver.c    72	 while(p!=STKSZ)
	JMPR	cc_UC,_14
_11:
; saver.c    73	 {
; saver.c    74	  //Пишем нижний стек из ОЗУ
; saver.c    75	  c=dstk[p];
	EXTP	#PAG _dstk,#01h
	MOVB	RL1,[R9+#POF _dstk]
; saver.c    76	  if (!c) c=0x0D;
	JMPR	cc_NZ,_12
	MOVB	RL1,#0Dh
_12:
; saver.c    77	  obuf[i]=c;
	EXTP	#PAG _obuf,#01h
	MOVB	[R8+#POF _obuf],RL1
; saver.c    78	  i++;
; saver.c    79	  flush_obuf(f,i);
	CMPI1	R8,#01FFFh
	JMPR	cc_SLT,_13
	MOV	R12,R6
	MOV	R13,#POF _obuf
	MOV	R14,#PAG _obuf
	MOV	R15,R8
	CALLS	SEG _FileWrite,_FileWrite
	MOV	R8,#00h
_13:
; saver.c    80	  p++;
	ADD	R9,#01h
_14:
	CMP	R9,#04000h
	JMPR	cc_NE,_11
; saver.c    81	 }
; saver.c    82	 FileWrite(f,obuf,i); //Недобиток
	MOV	R12,R6
	MOV	R13,#POF _obuf
	MOV	R14,#PAG _obuf
	MOV	R15,R8
	CALLS	SEG _FileWrite,_FileWrite
; saver.c    83	 i=d_disk;
	EXTP	#PAG _d_disk,#01h
	MOV	R8,POF _d_disk
; saver.c    84	 while(i>=0)
	JMPR	cc_UC,_18
_15:
; saver.c    85	 {
; saver.c    86	  //Пишем нижний стек
; saver.c    87	  p=dbat[i--];
	MOV	R12,R8
	SUB	R8,#01h
	EXTP	#PAG _dbat,#01h
	MOVB	RL1,[R12+#POF _dbat]
	MOVBZ	R9,RL1
; saver.c    88	  FileSeek(sf,_mulu32(STKSZ50,p),0,&ul);
	MOV	R12,R0
	AND	R12,#03FFFh
	MOV	R13,DPP1
	MOV	[-R0],R13
	MOV	[-R0],R12
	MOV	R13,#02000h
	MULU	R13,R9
	MOV	R14,MDH
	MOV	R13,MDL
	MOV	R12,R7
	MOV	R15,#00h
	CALLS	SEG _FileSeek,_FileSeek
	ADD	R0,#04h
; saver.c    89	  FileRead(sf,ibuf,STKSZ50);
	MOV	R12,R7
	MOV	R13,#POF _ibuf
	MOV	R14,#PAG _ibuf
	MOV	R15,#02000h
	CALLS	SEG _FileRead,_FileRead
; saver.c    90	  p=0;
	MOV	R9,#00h
; saver.c    91	  while(p!=STKSZ50)
_16:
; saver.c    92	  {
; saver.c    93	   if (!ibuf[p]) ibuf[p]=0x0D;
	MOV	R12,#POF _ibuf
	MOV	R13,#PAG _ibuf
	ADD	R12,R9
	EXTP	R13,#01h
	MOVB	RL1,[R12]
	JMPR	cc_NZ,_17
	MOVB	RL1,#0Dh
	EXTP	R13,#01h
	MOVB	[R12],RL1
_17:
	CMPI1	R9,#01FFFh
	JMPR	cc_NE,_16
; saver.c    94	   p++;
; saver.c    95	  }
; saver.c    96	  FileWrite(f,ibuf,STKSZ50);
	MOV	R12,R6
	MOV	R13,#POF _ibuf
	MOV	R14,#PAG _ibuf
	MOV	R15,#02000h
	CALLS	SEG _FileWrite,_FileWrite
_18:
	CMP	R8,#00h
	JMPR	cc_SGE,_15
; saver.c    97	 }
; saver.c    98	 FileClose(sf); //Более ничего интересного в верхнем стеке
	MOV	R12,R7
	CALLS	SEG _FileClose,_FileClose
; saver.c    99	 FileClose(f);
	MOV	R12,R6
	CALLS	SEG _FileClose,_FileClose
; saver.c   100	 disk_access=0;
	EXTP	#PAG _disk_access,#01h
	MOVB	POF _disk_access,ZEROS
; saver.c   101	 draw_mode=1; //Перерисовываем
	MOVB	RL6,#01h
	EXTP	#PAG _draw_mode,#01h
	MOVB	POF _draw_mode,RL6
; saver.c   102	 if (!terminated) SendMessage((void far *)0x3B5E8,0xF8,dia_id);
	EXTP	#PAG _terminated,#01h
	MOV	R8,POF _terminated
	JMPR	cc_NZ,_19
	MOV	R12,#035E8h
	MOV	R13,#0Eh
	MOV	R14,#0F8h
	EXTP	#PAG _dia_id,#01h
	MOV	R15,POF _dia_id
	CALLS	SEG _SendMessage,_SendMessage
_19:
; saver.c   103	}
	ADD	R0,#04h
	MOV	R6,[R0+]
	MOV	R7,[R0+]
	MOV	R8,[R0+]
	MOV	R9,[R0+]
	RETS
_savetext	ENDP
; saver.c   104	
SAVER_2_PR	ENDS

	EXTERN	_draw_mode:BYTE
	EXTERN	_d_disk:WORD
	EXTERN	_filename:BYTE
	EXTERN	_dsp:WORD
	EXTERN	_terminated:WORD
	EXTERN	_dia_id:WORD
	EXTERN	_FileClose:FAR
	EXTERN	_stkfile:BYTE
	EXTERN	_usp:WORD
	EXTERN	_FileSeek:FAR
	EXTERN	_FileWrite:FAR
	EXTERN	_SendMessage:FAR
	EXTERN	_FileRead:FAR
	EXTERN	_disk_access:BYTE
	EXTERN	_dstk:BYTE
	EXTERN	_ubat:BYTE
	EXTERN	_dbat:BYTE
	EXTERN	_u_disk:WORD
	EXTERN	_ustk:BYTE
	EXTERN	_FileOpen:FAR
	REGDEF	R0-R15
	END
